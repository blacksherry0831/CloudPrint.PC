<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cinch.Fakes</name>
    </assembly>
    <members>
        <member name="T:Cinch.Fakes.ShimAddRangeObservableCollection`1">
            <summary>Cinch.AddRangeObservableCollection`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.#ctor(Cinch.AddRangeObservableCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.AddRangeIEnumerableOfT0">
            <summary>设置 AddRangeObservableCollection`1.AddRange(IEnumerable`1&lt;!0&gt; list) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimAddRangeObservableCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.AllInstances.AddRangeIEnumerableOfT0">
            <summary>设置 AddRangeObservableCollection`1.AddRange(IEnumerable`1&lt;!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 AddRangeObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimAddRangeObservableCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.Constructor">
            <summary>设置 AddRangeObservableCollection`1.AddRangeObservableCollection`1() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.ConstructorIEnumerableOfT0">
            <summary>设置 AddRangeObservableCollection`1.AddRangeObservableCollection`1(IEnumerable`1&lt;!0&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.ConstructorListOfT0">
            <summary>设置 AddRangeObservableCollection`1.AddRangeObservableCollection`1(List`1&lt;!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimAddRangeObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 AddRangeObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimApplicationHelper">
            <summary>Cinch.ApplicationHelper 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimApplicationHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimApplicationHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimApplicationHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimApplicationHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimApplicationHelper.DoEvents">
            <summary>设置 ApplicationHelper.DoEvents() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimApplicationHelper.DoEventsDispatcherPriority">
            <summary>设置 ApplicationHelper.DoEvents(DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimApplicationHelper.ExitFrameOperationObject">
            <summary>设置 ApplicationHelper.ExitFrameOperation(Object obj) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimBackgroundTaskManager`1">
            <summary>Cinch.BackgroundTaskManager`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBackgroundTaskManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBackgroundTaskManager`1.#ctor(Cinch.BackgroundTaskManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances.CompletionActionGet">
            <summary>设置 BackgroundTaskManager`1.get_CompletionAction() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances.CompletionActionSetActionOfT0">
            <summary>设置 BackgroundTaskManager`1.set_CompletionAction(Action`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances.RunBackgroundTask">
            <summary>设置 BackgroundTaskManager`1.RunBackgroundTask() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances.TaskFuncGet">
            <summary>设置 BackgroundTaskManager`1.get_TaskFunc() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances.TaskFuncSetFuncOfT0">
            <summary>设置 BackgroundTaskManager`1.set_TaskFunc(Func`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances._RunBackgroundTaskb__0ObjectDoWorkEventArgs">
            <summary>设置 BackgroundTaskManager`1.&lt;RunBackgroundTask&gt;b__0(Object sender, DoWorkEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.AllInstances._RunBackgroundTaskb__1ObjectRunWorkerCompletedEventArgs">
            <summary>设置 BackgroundTaskManager`1.&lt;RunBackgroundTask&gt;b__1(Object sender, RunWorkerCompletedEventArgs e) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBackgroundTaskManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBackgroundTaskManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.CompletionActionGet">
            <summary>设置 BackgroundTaskManager`1.get_CompletionAction() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.CompletionActionSetActionOfT0">
            <summary>设置 BackgroundTaskManager`1.set_CompletionAction(Action`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.ConstructorFuncOfT0ActionOfT0">
            <summary>设置 BackgroundTaskManager`1.BackgroundTaskManager`1(Func`1&lt;!0&gt; taskFunc, Action`1&lt;!0&gt; completionAction) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.RunBackgroundTask">
            <summary>设置 BackgroundTaskManager`1.RunBackgroundTask() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.TaskFuncGet">
            <summary>设置 BackgroundTaskManager`1.get_TaskFunc() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1.TaskFuncSetFuncOfT0">
            <summary>设置 BackgroundTaskManager`1.set_TaskFunc(Func`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1._RunBackgroundTaskb__0ObjectDoWorkEventArgs">
            <summary>设置 BackgroundTaskManager`1.&lt;RunBackgroundTask&gt;b__0(Object sender, DoWorkEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBackgroundTaskManager`1._RunBackgroundTaskb__1ObjectRunWorkerCompletedEventArgs">
            <summary>设置 BackgroundTaskManager`1.&lt;RunBackgroundTask&gt;b__1(Object sender, RunWorkerCompletedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimBindableInput">
            <summary>Cinch.BindableInput 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBindableInput.#ctor(Cinch.BindableInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AddToInputBindingsObject">
            <summary>设置 BindableInput.AddToInputBindings(Object target) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimBindableInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.AddToInputBindingsObject">
            <summary>设置 BindableInput.AddToInputBindings(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.CommandGet">
            <summary>设置 BindableInput.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.CommandParameterGet">
            <summary>设置 BindableInput.get_CommandParameter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.CommandParameterSetObject">
            <summary>设置 BindableInput.set_CommandParameter(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.CommandSetICommand">
            <summary>设置 BindableInput.set_Command(ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.CreateInstanceCore">
            <summary>设置 BindableInput.CreateInstanceCore() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.GestureGet">
            <summary>设置 BindableInput.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.GestureSetInputGesture">
            <summary>设置 BindableInput.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.AllInstances.RemoveFromInputBindingsObject">
            <summary>设置 BindableInput.RemoveFromInputBindings(Object target) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBindableInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimBindableInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.CommandGet">
            <summary>设置 BindableInput.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.CommandParameterGet">
            <summary>设置 BindableInput.get_CommandParameter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.CommandParameterSetObject">
            <summary>设置 BindableInput.set_CommandParameter(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.CommandSetICommand">
            <summary>设置 BindableInput.set_Command(ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.Constructor">
            <summary>设置 BindableInput.BindableInput() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.CreateInstanceCore">
            <summary>设置 BindableInput.CreateInstanceCore() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.GestureGet">
            <summary>设置 BindableInput.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.GestureSetInputGesture">
            <summary>设置 BindableInput.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.RemoveFromInputBindingsObject">
            <summary>设置 BindableInput.RemoveFromInputBindings(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimBindableInput.StaticConstructor">
            <summary>设置 BindableInput.BindableInput() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCloseRequestEventArgs">
            <summary>Cinch.CloseRequestEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCloseRequestEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCloseRequestEventArgs.#ctor(Cinch.CloseRequestEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCloseRequestEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.AllInstances.ResultGet">
            <summary>设置 CloseRequestEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.AllInstances.ResultSetNullableOfBoolean">
            <summary>设置 CloseRequestEventArgs.set_Result(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCloseRequestEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCloseRequestEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.ConstructorNullableOfBoolean">
            <summary>设置 CloseRequestEventArgs.CloseRequestEventArgs(Nullable`1&lt;Boolean&gt; result) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.ResultGet">
            <summary>设置 CloseRequestEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCloseRequestEventArgs.ResultSetNullableOfBoolean">
            <summary>设置 CloseRequestEventArgs.set_Result(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCommandEvent">
            <summary>Cinch.CommandEvent 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEvent.#ctor(Cinch.CommandEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCommandEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.CommandGet">
            <summary>设置 CommandEvent.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.CommandSetICommand">
            <summary>设置 CommandEvent.set_Command(ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.CreateInstanceCore">
            <summary>设置 CommandEvent.CreateInstanceCore() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.EventGet">
            <summary>设置 CommandEvent.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.EventSetString">
            <summary>设置 CommandEvent.set_Event(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.GetEventMethodEventInfo">
            <summary>设置 CommandEvent.GetEventMethod(EventInfo ei) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.OnEventRaisedObjectEventArgs">
            <summary>设置 CommandEvent.OnEventRaised(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.SubscribeObject">
            <summary>设置 CommandEvent.Subscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.AllInstances.UnsubscribeObject">
            <summary>设置 CommandEvent.Unsubscribe(Object target) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.CommandGet">
            <summary>设置 CommandEvent.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.CommandSetICommand">
            <summary>设置 CommandEvent.set_Command(ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.Constructor">
            <summary>设置 CommandEvent.CommandEvent() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.CreateInstanceCore">
            <summary>设置 CommandEvent.CreateInstanceCore() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.EventGet">
            <summary>设置 CommandEvent.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.EventSetString">
            <summary>设置 CommandEvent.set_Event(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.GetEventMethodEventInfo">
            <summary>设置 CommandEvent.GetEventMethod(EventInfo ei) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.OnEventRaisedObjectEventArgs">
            <summary>设置 CommandEvent.OnEventRaised(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.StaticConstructor">
            <summary>设置 CommandEvent.CommandEvent() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.SubscribeObject">
            <summary>设置 CommandEvent.Subscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEvent.UnsubscribeObject">
            <summary>设置 CommandEvent.Unsubscribe(Object target) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCommandEventCollection">
            <summary>Cinch.CommandEventCollection 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.#ctor(Cinch.CommandEventCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimCommandEventCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances.OnCollectionChangedObjectNotifyCollectionChangedEventArgs">
            <summary>设置 CommandEventCollection.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances.OnItemAddedCommandEvent">
            <summary>设置 CommandEventCollection.OnItemAdded(CommandEvent item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances.OnItemRemovedCommandEvent">
            <summary>设置 CommandEventCollection.OnItemRemoved(CommandEvent item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances.SubscribeObject">
            <summary>设置 CommandEventCollection.Subscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances.UnsubscribeObject">
            <summary>设置 CommandEventCollection.Unsubscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.AllInstances._OnCollectionChangedb__0CommandEvent">
            <summary>设置 CommandEventCollection.&lt;OnCollectionChanged&gt;b__0(CommandEvent i) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Windows.Media.Animation.IAnimatable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.Generic.ICollection{Cinch.CommandEvent})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.Generic.IEnumerable{Cinch.CommandEvent})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimCommandEventCollection.Bind(System.Collections.Generic.IList{Cinch.CommandEvent})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.Constructor">
            <summary>设置 CommandEventCollection.CommandEventCollection() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.OnCollectionChangedObjectNotifyCollectionChangedEventArgs">
            <summary>设置 CommandEventCollection.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.OnItemAddedCommandEvent">
            <summary>设置 CommandEventCollection.OnItemAdded(CommandEvent item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.OnItemRemovedCommandEvent">
            <summary>设置 CommandEventCollection.OnItemRemoved(CommandEvent item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.SubscribeObject">
            <summary>设置 CommandEventCollection.Subscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection.UnsubscribeObject">
            <summary>设置 CommandEventCollection.Unsubscribe(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimCommandEventCollection._OnCollectionChangedb__0CommandEvent">
            <summary>设置 CommandEventCollection.&lt;OnCollectionChanged&gt;b__0(CommandEvent i) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapper`1">
            <summary>Cinch.DataWrapper`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.#ctor(Cinch.DataWrapper{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapper`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.AllInstances.DataValueGet">
            <summary>设置 DataWrapper`1.get_DataValue() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.AllInstances.DataValueSetT0">
            <summary>设置 DataWrapper`1.set_DataValue(!0 value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.AllInstances.IsDirtyGet">
            <summary>设置 DataWrapper`1.get_IsDirty() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(Cinch.IChangeIndicator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(Cinch.IDataWrapper{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(System.ComponentModel.IEditableObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapper`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.Constructor">
            <summary>设置 DataWrapper`1.DataWrapper`1() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.ConstructorIParentablePropertyExposerPropertyChangedEventArgs">
            <summary>设置 DataWrapper`1.DataWrapper`1(IParentablePropertyExposer parent, PropertyChangedEventArgs parentPropertyChangeArgs) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.ConstructorT0">
            <summary>设置 DataWrapper`1.DataWrapper`1(!0 initialValue) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.DataValueGet">
            <summary>设置 DataWrapper`1.get_DataValue() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.DataValueSetT0">
            <summary>设置 DataWrapper`1.set_DataValue(!0 value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.IsDirtyGet">
            <summary>设置 DataWrapper`1.get_IsDirty() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapper`1.StaticConstructor">
            <summary>设置 DataWrapper`1.DataWrapper`1() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperBase">
            <summary>Cinch.DataWrapperBase 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.#ctor(Cinch.DataWrapperBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.AllInstances.IsEditableGet">
            <summary>设置 DataWrapperBase.get_IsEditable() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.AllInstances.IsEditableSetBoolean">
            <summary>设置 DataWrapperBase.set_IsEditable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.AllInstances.NotifyParentPropertyChanged">
            <summary>设置 DataWrapperBase.NotifyParentPropertyChanged() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.Bind(System.ComponentModel.IEditableObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperBase.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.Constructor">
            <summary>设置 DataWrapperBase.DataWrapperBase() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.ConstructorIParentablePropertyExposerPropertyChangedEventArgs">
            <summary>设置 DataWrapperBase.DataWrapperBase(IParentablePropertyExposer parent, PropertyChangedEventArgs parentPropertyChangeArgs) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.IsEditableGet">
            <summary>设置 DataWrapperBase.get_IsEditable() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.IsEditableSetBoolean">
            <summary>设置 DataWrapperBase.set_IsEditable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.NotifyParentPropertyChanged">
            <summary>设置 DataWrapperBase.NotifyParentPropertyChanged() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperBase.StaticConstructor">
            <summary>设置 DataWrapperBase.DataWrapperBase() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperDirtySupportingBase">
            <summary>Cinch.DataWrapperDirtySupportingBase 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.#ctor(Cinch.DataWrapperDirtySupportingBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.AllInstances.HasPropertyChangedString">
            <summary>设置 DataWrapperDirtySupportingBase.HasPropertyChanged(String propertyName) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Bind(System.ComponentModel.IEditableObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.Constructor">
            <summary>设置 DataWrapperDirtySupportingBase.DataWrapperDirtySupportingBase() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperDirtySupportingBase.HasPropertyChangedString">
            <summary>设置 DataWrapperDirtySupportingBase.HasPropertyChanged(String propertyName) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperHelper">
            <summary>Cinch.DataWrapperHelper 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperHelper.#ctor(Cinch.DataWrapperHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDataWrapperHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.AllValidIEnumerableOfDataWrapperBase">
            <summary>设置 DataWrapperHelper.AllValid(IEnumerable`1&lt;DataWrapperBase&gt; wrapperProperties) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.Constructor">
            <summary>设置 DataWrapperHelper.DataWrapperHelper() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDataWrapperHelper.GetWrapperPropertiesOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.IEnumerable{Cinch.DataWrapperBase}})">
            <summary>设置 DataWrapperHelper.GetWrapperProperties(!!0 parentObject) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.SetBeginEditIEnumerableOfDataWrapperBase">
            <summary>设置 DataWrapperHelper.SetBeginEdit(IEnumerable`1&lt;DataWrapperBase&gt; wrapperProperties) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.SetCancelEditIEnumerableOfDataWrapperBase">
            <summary>设置 DataWrapperHelper.SetCancelEdit(IEnumerable`1&lt;DataWrapperBase&gt; wrapperProperties) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.SetEndEditIEnumerableOfDataWrapperBase">
            <summary>设置 DataWrapperHelper.SetEndEdit(IEnumerable`1&lt;DataWrapperBase&gt; wrapperProperties) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDataWrapperHelper.SetModeIEnumerableOfDataWrapperBaseViewMode">
            <summary>设置 DataWrapperHelper.SetMode(IEnumerable`1&lt;DataWrapperBase&gt; wrapperProperties, ViewMode currentViewMode) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDispatcherExtensions">
            <summary>Cinch.DispatcherExtensions 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherExtensions.InvokeAsynchronouslyInBackgroundDispatcherAction">
            <summary>设置 DispatcherExtensions.InvokeAsynchronouslyInBackground(Dispatcher dispatcher, Action action) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherExtensions.InvokeIfRequiredDispatcherAction">
            <summary>设置 DispatcherExtensions.InvokeIfRequired(Dispatcher dispatcher, Action action) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherExtensions.InvokeIfRequiredDispatcherActionDispatcherPriority">
            <summary>设置 DispatcherExtensions.InvokeIfRequired(Dispatcher dispatcher, Action action, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherExtensions.InvokeInBackgroundIfRequiredDispatcherAction">
            <summary>设置 DispatcherExtensions.InvokeInBackgroundIfRequired(Dispatcher dispatcher, Action action) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1">
            <summary>Cinch.DispatcherNotifiedObservableCollection`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.#ctor(Cinch.DispatcherNotifiedObservableCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.AllInstances.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>设置 DispatcherNotifiedObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.AllInstances.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>设置 DispatcherNotifiedObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 DispatcherNotifiedObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>设置 DispatcherNotifiedObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>设置 DispatcherNotifiedObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.Constructor">
            <summary>设置 DispatcherNotifiedObservableCollection`1.DispatcherNotifiedObservableCollection`1() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.ConstructorIEnumerableOfT0">
            <summary>设置 DispatcherNotifiedObservableCollection`1.DispatcherNotifiedObservableCollection`1(IEnumerable`1&lt;!0&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.ConstructorListOfT0">
            <summary>设置 DispatcherNotifiedObservableCollection`1.DispatcherNotifiedObservableCollection`1(List`1&lt;!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimDispatcherNotifiedObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 DispatcherNotifiedObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEditableValidatingObject">
            <summary>Cinch.EditableValidatingObject 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.#ctor(Cinch.EditableValidatingObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEditableValidatingObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.BeginEdit">
            <summary>设置 EditableValidatingObject.BeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.CancelEdit">
            <summary>设置 EditableValidatingObject.CancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.EndEdit">
            <summary>设置 EditableValidatingObject.EndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.AllInstances.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.BeginEdit">
            <summary>设置 EditableValidatingObject.BeginEdit() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.Bind(System.ComponentModel.IEditableObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.CancelEdit">
            <summary>设置 EditableValidatingObject.CancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.Constructor">
            <summary>设置 EditableValidatingObject.EditableValidatingObject() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.EndEdit">
            <summary>设置 EditableValidatingObject.EndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingObject.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEditableValidatingViewModelBase">
            <summary>Cinch.EditableValidatingViewModelBase 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.#ctor(Cinch.EditableValidatingViewModelBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.BeginEdit">
            <summary>设置 EditableValidatingViewModelBase.BeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.CancelEdit">
            <summary>设置 EditableValidatingViewModelBase.CancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.EndEdit">
            <summary>设置 EditableValidatingViewModelBase.EndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.GetFieldValues">
            <summary>设置 EditableValidatingViewModelBase.GetFieldValues() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.OnBeginEdit">
            <summary>设置 EditableValidatingViewModelBase.OnBeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.OnCancelEdit">
            <summary>设置 EditableValidatingViewModelBase.OnCancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.OnEndEdit">
            <summary>设置 EditableValidatingViewModelBase.OnEndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.AllInstances.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingViewModelBase.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.BeginEdit">
            <summary>设置 EditableValidatingViewModelBase.BeginEdit() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.Bind(System.ComponentModel.IEditableObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEditableValidatingViewModelBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.CancelEdit">
            <summary>设置 EditableValidatingViewModelBase.CancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.Constructor">
            <summary>设置 EditableValidatingViewModelBase.EditableValidatingViewModelBase() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.EndEdit">
            <summary>设置 EditableValidatingViewModelBase.EndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.GetFieldValues">
            <summary>设置 EditableValidatingViewModelBase.GetFieldValues() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.OnBeginEdit">
            <summary>设置 EditableValidatingViewModelBase.OnBeginEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.OnCancelEdit">
            <summary>设置 EditableValidatingViewModelBase.OnCancelEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.OnEndEdit">
            <summary>设置 EditableValidatingViewModelBase.OnEndEdit() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingViewModelBase.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase._GetFieldValuesb__0PropertyInfo">
            <summary>设置 EditableValidatingViewModelBase.&lt;GetFieldValues&gt;b__0(PropertyInfo pi) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEditableValidatingViewModelBase._RestoreFieldValuesb__7PropertyInfo">
            <summary>设置 EditableValidatingViewModelBase.&lt;RestoreFieldValues&gt;b__7(PropertyInfo pi) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEventCommander">
            <summary>Cinch.EventCommander 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventCommander.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventCommander.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventCommander.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.GetMappingsDependencyObject">
            <summary>设置 EventCommander.GetMappings(DependencyObject obj) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.InternalGetMappingCollectionDependencyObject">
            <summary>设置 EventCommander.InternalGetMappingCollection(DependencyObject obj) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.OnMappingsChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 EventCommander.OnMappingsChanged(DependencyObject target, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.SetMappingsDependencyObjectCommandEventCollection">
            <summary>设置 EventCommander.SetMappings(DependencyObject obj, CommandEventCollection value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventCommander.StaticConstructor">
            <summary>设置 EventCommander.EventCommander() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEventHandlerUtils">
            <summary>Cinch.EventHandlerUtils 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventHandlerUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventHandlerUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventHandlerUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventHandlerUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventHandlerUtils.MakeWeakOf1EventHandlerOfM0UnregisterCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.EventHandler{``0},Cinch.UnregisterCallback{``0},System.EventHandler{``0}})">
            <summary>设置 EventHandlerUtils.MakeWeak(EventHandler`1&lt;!!0&gt; eventHandler, UnregisterCallback`1&lt;!!0&gt; unregister) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEventParameters">
            <summary>Cinch.EventParameters 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventParameters.#ctor(Cinch.EventParameters)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimEventParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.AllInstances.EventArgsGet">
            <summary>设置 EventParameters.get_EventArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.AllInstances.EventArgsSetEventArgs">
            <summary>设置 EventParameters.set_EventArgs(EventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.AllInstances.SenderGet">
            <summary>设置 EventParameters.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.AllInstances.SenderSetObject">
            <summary>设置 EventParameters.set_Sender(Object value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimEventParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.ConstructorObjectEventArgs">
            <summary>设置 EventParameters.EventParameters(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.EventArgsGet">
            <summary>设置 EventParameters.get_EventArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.EventArgsSetEventArgs">
            <summary>设置 EventParameters.set_EventArgs(EventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.SenderGet">
            <summary>设置 EventParameters.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimEventParameters.SenderSetObject">
            <summary>设置 EventParameters.set_Sender(Object value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimFocusHelper">
            <summary>Cinch.FocusHelper 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimFocusHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimFocusHelper.#ctor(Cinch.FocusHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimFocusHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimFocusHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimFocusHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimFocusHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimFocusHelper.Constructor">
            <summary>设置 FocusHelper.FocusHelper() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimFocusHelper.FocusUIElement">
            <summary>设置 FocusHelper.Focus(UIElement element) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimFocusHelper._Focusb__0Object">
            <summary>设置 FocusHelper.&lt;Focus&gt;b__0(Object theElement) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimInputBinder">
            <summary>Cinch.InputBinder 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBinder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBinder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBinder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.GetBindingsDependencyObject">
            <summary>设置 InputBinder.GetBindings(DependencyObject obj) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.InternalGetBindingCollectionDependencyObject">
            <summary>设置 InputBinder.InternalGetBindingCollection(DependencyObject obj) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.OnBindingsChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 InputBinder.OnBindingsChanged(DependencyObject target, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.SetBindingsDependencyObjectInputBindingCollection">
            <summary>设置 InputBinder.SetBindings(DependencyObject obj, InputBindingCollection value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBinder.StaticConstructor">
            <summary>设置 InputBinder.InputBinder() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimInputBindingCollection">
            <summary>Cinch.InputBindingCollection 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.#ctor(Cinch.InputBindingCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AddBindingsObject">
            <summary>设置 InputBindingCollection.AddBindings(Object target) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimInputBindingCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances.AddBindingsObject">
            <summary>设置 InputBindingCollection.AddBindings(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances.OnCollectionChangedObjectNotifyCollectionChangedEventArgs">
            <summary>设置 InputBindingCollection.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances.OnItemAddedBindableInput">
            <summary>设置 InputBindingCollection.OnItemAdded(BindableInput item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances.OnItemRemovedBindableInput">
            <summary>设置 InputBindingCollection.OnItemRemoved(BindableInput item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances.RemoveBindingsObject">
            <summary>设置 InputBindingCollection.RemoveBindings(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.AllInstances._OnCollectionChangedb__0BindableInput">
            <summary>设置 InputBindingCollection.&lt;OnCollectionChanged&gt;b__0(BindableInput i) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Windows.Media.Animation.IAnimatable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.Generic.ICollection{Cinch.BindableInput})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.Generic.IEnumerable{Cinch.BindableInput})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimInputBindingCollection.Bind(System.Collections.Generic.IList{Cinch.BindableInput})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.Constructor">
            <summary>设置 InputBindingCollection.InputBindingCollection() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.OnCollectionChangedObjectNotifyCollectionChangedEventArgs">
            <summary>设置 InputBindingCollection.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.OnItemAddedBindableInput">
            <summary>设置 InputBindingCollection.OnItemAdded(BindableInput item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.OnItemRemovedBindableInput">
            <summary>设置 InputBindingCollection.OnItemRemoved(BindableInput item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection.RemoveBindingsObject">
            <summary>设置 InputBindingCollection.RemoveBindings(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimInputBindingCollection._OnCollectionChangedb__0BindableInput">
            <summary>设置 InputBindingCollection.&lt;OnCollectionChanged&gt;b__0(BindableInput i) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimKeyBinding">
            <summary>Cinch.KeyBinding 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimKeyBinding.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimKeyBinding.#ctor(Cinch.KeyBinding)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimKeyBinding.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.CreateInputBinding">
            <summary>设置 KeyBinding.CreateInputBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.GestureGet">
            <summary>设置 KeyBinding.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.GestureSetInputGesture">
            <summary>设置 KeyBinding.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.IsInputBindingMatchInputBinding">
            <summary>设置 KeyBinding.IsInputBindingMatch(InputBinding binding) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.KeyGet">
            <summary>设置 KeyBinding.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.KeySetKey">
            <summary>设置 KeyBinding.set_Key(Key value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.ModifiersGet">
            <summary>设置 KeyBinding.get_Modifiers() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.AllInstances.ModifiersSetModifierKeys">
            <summary>设置 KeyBinding.set_Modifiers(ModifierKeys value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimKeyBinding.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimKeyBinding.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.Constructor">
            <summary>设置 KeyBinding.KeyBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.CreateInputBinding">
            <summary>设置 KeyBinding.CreateInputBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.GestureGet">
            <summary>设置 KeyBinding.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.GestureSetInputGesture">
            <summary>设置 KeyBinding.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.IsInputBindingMatchInputBinding">
            <summary>设置 KeyBinding.IsInputBindingMatch(InputBinding binding) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.KeyGet">
            <summary>设置 KeyBinding.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.KeySetKey">
            <summary>设置 KeyBinding.set_Key(Key value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.ModifiersGet">
            <summary>设置 KeyBinding.get_Modifiers() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimKeyBinding.ModifiersSetModifierKeys">
            <summary>设置 KeyBinding.set_Modifiers(ModifierKeys value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimLifetimeEvent">
            <summary>Cinch.LifetimeEvent 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimLifetimeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimLifetimeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimLifetimeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetActivatedDependencyObject">
            <summary>设置 LifetimeEvent.GetActivated(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetCloseDependencyObject">
            <summary>设置 LifetimeEvent.GetClose(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetCommandParameterDependencyObject">
            <summary>设置 LifetimeEvent.GetCommandParameter(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetDeactivatedDependencyObject">
            <summary>设置 LifetimeEvent.GetDeactivated(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetLoadedDependencyObject">
            <summary>设置 LifetimeEvent.GetLoaded(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.GetUnloadedDependencyObject">
            <summary>设置 LifetimeEvent.GetUnloaded(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnActivatedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 LifetimeEvent.OnActivatedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnCloseEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 LifetimeEvent.OnCloseEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnDeactivatedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 LifetimeEvent.OnDeactivatedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnLoadedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 LifetimeEvent.OnLoadedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnUnloadedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 LifetimeEvent.OnUnloadedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowActivatedObjectEventArgs">
            <summary>设置 LifetimeEvent.OnWindowActivated(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowClosedObjectEventArgs">
            <summary>设置 LifetimeEvent.OnWindowClosed(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowClosingObjectCancelEventArgs">
            <summary>设置 LifetimeEvent.OnWindowClosing(Object sender, CancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowDeactivatedObjectEventArgs">
            <summary>设置 LifetimeEvent.OnWindowDeactivated(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowLoadedObjectEventArgs">
            <summary>设置 LifetimeEvent.OnWindowLoaded(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.OnWindowUnloadedObjectEventArgs">
            <summary>设置 LifetimeEvent.OnWindowUnloaded(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetActivatedDependencyObjectICommand">
            <summary>设置 LifetimeEvent.SetActivated(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetCloseDependencyObjectICommand">
            <summary>设置 LifetimeEvent.SetClose(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetCommandParameterDependencyObjectObject">
            <summary>设置 LifetimeEvent.SetCommandParameter(DependencyObject source, Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetDeactivatedDependencyObjectICommand">
            <summary>设置 LifetimeEvent.SetDeactivated(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetLoadedDependencyObjectICommand">
            <summary>设置 LifetimeEvent.SetLoaded(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.SetUnloadedDependencyObjectICommand">
            <summary>设置 LifetimeEvent.SetUnloaded(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimLifetimeEvent.StaticConstructor">
            <summary>设置 LifetimeEvent.LifetimeEvent() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMediator">
            <summary>Cinch.Mediator 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.#ctor(Cinch.Mediator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMediator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.AllInstances.NotifyColleaguesOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Cinch.Mediator,System.String})">
            <summary>设置 Mediator.NotifyColleagues(String message) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.AllInstances.NotifyColleaguesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Cinch.Mediator,System.String,``0})">
            <summary>设置 Mediator.NotifyColleagues(String message, !!0 parameter) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.AllInstances.RegisterObject">
            <summary>设置 Mediator.Register(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.AllInstances.RegisterStringDelegate">
            <summary>设置 Mediator.Register(String message, Delegate callback) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.Constructor">
            <summary>设置 Mediator.Mediator() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.NotifyColleaguesOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String})">
            <summary>设置 Mediator.NotifyColleagues(String message) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator.NotifyColleaguesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 Mediator.NotifyColleagues(String message, !!0 parameter) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.RegisterObject">
            <summary>设置 Mediator.Register(Object target) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediator.RegisterStringDelegate">
            <summary>设置 Mediator.Register(String message, Delegate callback) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediator._NotifyColleaguesb__3Of1Delegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Delegate})">
            <summary>设置 Mediator.&lt;NotifyColleagues&gt;b__3(Delegate action) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMediatorMessageSinkAttribute">
            <summary>Cinch.MediatorMessageSinkAttribute 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediatorMessageSinkAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediatorMessageSinkAttribute.#ctor(Cinch.MediatorMessageSinkAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMediatorMessageSinkAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.AllInstances.MessageGet">
            <summary>设置 MediatorMessageSinkAttribute.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.AllInstances.MessageSetString">
            <summary>设置 MediatorMessageSinkAttribute.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.AllInstances.ParameterTypeGet">
            <summary>设置 MediatorMessageSinkAttribute.get_ParameterType() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.AllInstances.ParameterTypeSetType">
            <summary>设置 MediatorMessageSinkAttribute.set_ParameterType(Type value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediatorMessageSinkAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMediatorMessageSinkAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.ConstructorString">
            <summary>设置 MediatorMessageSinkAttribute.MediatorMessageSinkAttribute(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.MessageGet">
            <summary>设置 MediatorMessageSinkAttribute.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.MessageSetString">
            <summary>设置 MediatorMessageSinkAttribute.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.ParameterTypeGet">
            <summary>设置 MediatorMessageSinkAttribute.get_ParameterType() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMediatorMessageSinkAttribute.ParameterTypeSetType">
            <summary>设置 MediatorMessageSinkAttribute.set_ParameterType(Type value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMouseBinding">
            <summary>Cinch.MouseBinding 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMouseBinding.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMouseBinding.#ctor(Cinch.MouseBinding)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimMouseBinding.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.AllInstances.CreateInputBinding">
            <summary>设置 MouseBinding.CreateInputBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.AllInstances.GestureGet">
            <summary>设置 MouseBinding.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.AllInstances.GestureSetInputGesture">
            <summary>设置 MouseBinding.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.AllInstances.IsInputBindingMatchInputBinding">
            <summary>设置 MouseBinding.IsInputBindingMatch(InputBinding binding) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMouseBinding.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimMouseBinding.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.Constructor">
            <summary>设置 MouseBinding.MouseBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.CreateInputBinding">
            <summary>设置 MouseBinding.CreateInputBinding() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.GestureGet">
            <summary>设置 MouseBinding.get_Gesture() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.GestureSetInputGesture">
            <summary>设置 MouseBinding.set_Gesture(InputGesture value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimMouseBinding.IsInputBindingMatchInputBinding">
            <summary>设置 MouseBinding.IsInputBindingMatch(InputBinding binding) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimNumericTextBoxBehavior">
            <summary>Cinch.NumericTextBoxBehavior 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimNumericTextBoxBehavior.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimNumericTextBoxBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimNumericTextBoxBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.GetIsEnabledDependencyObject">
            <summary>设置 NumericTextBoxBehavior.GetIsEnabled(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.OnClipboardPasteObjectDataObjectPastingEventArgs">
            <summary>设置 NumericTextBoxBehavior.OnClipboardPaste(Object sender, DataObjectPastingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.OnEnabledStateChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 NumericTextBoxBehavior.OnEnabledStateChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.SetIsEnabledDependencyObjectBoolean">
            <summary>设置 NumericTextBoxBehavior.SetIsEnabled(DependencyObject source, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.StaticConstructor">
            <summary>设置 NumericTextBoxBehavior.NumericTextBoxBehavior() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.ValidateTextBoxString">
            <summary>设置 NumericTextBoxBehavior.Validate(TextBox tb, String newContent) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimNumericTextBoxBehavior.tbb_PreviewTextInputObjectTextCompositionEventArgs">
            <summary>设置 NumericTextBoxBehavior.tbb_PreviewTextInput(Object sender, TextCompositionEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimObservableHelper">
            <summary>Cinch.ObservableHelper 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimObservableHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimObservableHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimObservableHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimObservableHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimObservableHelper.CreateArgsOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.ComponentModel.PropertyChangedEventArgs})">
            <summary>设置 ObservableHelper.CreateArgs(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; propertyExpression) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimObservableHelper.GetPropertyNameOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String})">
            <summary>设置 ObservableHelper.GetPropertyName(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; propertyExpression) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimPropertyObserver`1">
            <summary>Cinch.PropertyObserver`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimPropertyObserver`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimPropertyObserver`1.#ctor(Cinch.PropertyObserver{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimPropertyObserver`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.AllInstances.GetPropertyNameExpressionOfFuncOfT0Object">
            <summary>设置 PropertyObserver`1.GetPropertyName(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.AllInstances.GetPropertySource">
            <summary>设置 PropertyObserver`1.GetPropertySource() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.AllInstances.RegisterHandlerExpressionOfFuncOfT0ObjectActionOfT0">
            <summary>设置 PropertyObserver`1.RegisterHandler(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, Action`1&lt;!0&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.AllInstances.SystemWindowsIWeakEventListenerReceiveWeakEventTypeObjectEventArgs">
            <summary>设置 PropertyObserver`1.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.AllInstances.UnregisterHandlerExpressionOfFuncOfT0Object">
            <summary>设置 PropertyObserver`1.UnregisterHandler(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimPropertyObserver`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimPropertyObserver`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimPropertyObserver`1.Bind(System.Windows.IWeakEventListener)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.ConstructorT0">
            <summary>设置 PropertyObserver`1.PropertyObserver`1(!0 propertySource) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.GetPropertyNameExpressionOfFuncOfT0Object">
            <summary>设置 PropertyObserver`1.GetPropertyName(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.GetPropertySource">
            <summary>设置 PropertyObserver`1.GetPropertySource() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.RegisterHandlerExpressionOfFuncOfT0ObjectActionOfT0">
            <summary>设置 PropertyObserver`1.RegisterHandler(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, Action`1&lt;!0&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.SystemWindowsIWeakEventListenerReceiveWeakEventTypeObjectEventArgs">
            <summary>设置 PropertyObserver`1.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimPropertyObserver`1.UnregisterHandlerExpressionOfFuncOfT0Object">
            <summary>设置 PropertyObserver`1.UnregisterHandler(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimRegexRule">
            <summary>Cinch.RegexRule 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRegexRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRegexRule.#ctor(Cinch.RegexRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimRegexRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRegexRule.AllInstances.ValidateRuleObject">
            <summary>设置 RegexRule.ValidateRule(Object domainObject) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRegexRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRegexRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRegexRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRegexRule.ConstructorStringStringString">
            <summary>设置 RegexRule.RegexRule(String propertyName, String description, String regex) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRegexRule.ValidateRuleObject">
            <summary>设置 RegexRule.ValidateRule(Object domainObject) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimRule">
            <summary>Cinch.Rule 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRule.#ctor(Cinch.Rule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.DescriptionGet">
            <summary>设置 Rule.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.DescriptionSetString">
            <summary>设置 Rule.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.GetHashCode01">
            <summary>设置 Rule.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.PropertyNameGet">
            <summary>设置 Rule.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.PropertyNameSetString">
            <summary>设置 Rule.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.AllInstances.ToString01">
            <summary>设置 Rule.ToString() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.ConstructorStringString">
            <summary>设置 Rule.Rule(String propertyName, String brokenDescription) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.DescriptionGet">
            <summary>设置 Rule.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.DescriptionSetString">
            <summary>设置 Rule.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.GetHashCode">
            <summary>设置 Rule.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.PropertyNameGet">
            <summary>设置 Rule.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.PropertyNameSetString">
            <summary>设置 Rule.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimRule.ToString">
            <summary>设置 Rule.ToString() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSCommandArgs">
            <summary>Cinch.SCommandArgs 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSCommandArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSCommandArgs.#ctor(Cinch.SCommandArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSCommandArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.CommandParameterGet">
            <summary>设置 SCommandArgs.get_CommandParameter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.CommandParameterSetObject">
            <summary>设置 SCommandArgs.set_CommandParameter(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.EventArgsGet">
            <summary>设置 SCommandArgs.get_EventArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.EventArgsSetObject">
            <summary>设置 SCommandArgs.set_EventArgs(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.SenderGet">
            <summary>设置 SCommandArgs.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.AllInstances.SenderSetObject">
            <summary>设置 SCommandArgs.set_Sender(Object value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSCommandArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSCommandArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.CommandParameterGet">
            <summary>设置 SCommandArgs.get_CommandParameter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.CommandParameterSetObject">
            <summary>设置 SCommandArgs.set_CommandParameter(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.Constructor">
            <summary>设置 SCommandArgs.SCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.ConstructorObjectObjectObject">
            <summary>设置 SCommandArgs.SCommandArgs(Object sender, Object eventArgs, Object commandParameter) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.EventArgsGet">
            <summary>设置 SCommandArgs.get_EventArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.EventArgsSetObject">
            <summary>设置 SCommandArgs.set_EventArgs(Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.SenderGet">
            <summary>设置 SCommandArgs.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSCommandArgs.SenderSetObject">
            <summary>设置 SCommandArgs.set_Sender(Object value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior">
            <summary>Cinch.SelectorDoubleClickCommandBehavior 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.GetHandleDoubleClickDependencyObject">
            <summary>设置 SelectorDoubleClickCommandBehavior.GetHandleDoubleClick(DependencyObject d) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.GetTheCommandToRunDependencyObject">
            <summary>设置 SelectorDoubleClickCommandBehavior.GetTheCommandToRun(DependencyObject d) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.OnHandleDoubleClickChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 SelectorDoubleClickCommandBehavior.OnHandleDoubleClickChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.OnMouseDoubleClickObjectMouseButtonEventArgs">
            <summary>设置 SelectorDoubleClickCommandBehavior.OnMouseDoubleClick(Object sender, MouseButtonEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.SetHandleDoubleClickDependencyObjectBoolean">
            <summary>设置 SelectorDoubleClickCommandBehavior.SetHandleDoubleClick(DependencyObject d, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.SetTheCommandToRunDependencyObjectICommand">
            <summary>设置 SelectorDoubleClickCommandBehavior.SetTheCommandToRun(DependencyObject d, ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSelectorDoubleClickCommandBehavior.StaticConstructor">
            <summary>设置 SelectorDoubleClickCommandBehavior.SelectorDoubleClickCommandBehavior() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimServiceProvider">
            <summary>Cinch.ServiceProvider 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.#ctor(Cinch.ServiceProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.AddTypeObject">
            <summary>设置 ServiceProvider.Add(Type type, Object value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimServiceProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.AllInstances.AddTypeObject">
            <summary>设置 ServiceProvider.Add(Type type, Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.AllInstances.Clear">
            <summary>设置 ServiceProvider.Clear() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.AllInstances.GetServiceType">
            <summary>设置 ServiceProvider.GetService(Type serviceType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.AllInstances.RemoveType">
            <summary>设置 ServiceProvider.Remove(Type type) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.AllInstances.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Cinch.ServiceProvider,``0})">
            <summary>设置 ServiceProvider.Resolve() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.Bind(System.IServiceProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.Clear">
            <summary>设置 ServiceProvider.Clear() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.Constructor">
            <summary>设置 ServiceProvider.ServiceProvider() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.GetServiceType">
            <summary>设置 ServiceProvider.GetService(Type serviceType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimServiceProvider.RemoveType">
            <summary>设置 ServiceProvider.Remove(Type type) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimServiceProvider.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 ServiceProvider.Resolve() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSimpleCommand">
            <summary>Cinch.SimpleCommand 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleCommand.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleCommand.#ctor(Cinch.SimpleCommand)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSimpleCommand.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CanExecuteChangedAddEventHandler">
            <summary>设置 SimpleCommand.add_CanExecuteChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CanExecuteChangedRemoveEventHandler">
            <summary>设置 SimpleCommand.remove_CanExecuteChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CanExecuteDelegateGet">
            <summary>设置 SimpleCommand.get_CanExecuteDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CanExecuteDelegateSetPredicateOfObject">
            <summary>设置 SimpleCommand.set_CanExecuteDelegate(Predicate`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CanExecuteObject">
            <summary>设置 SimpleCommand.CanExecute(Object parameter) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CommandSucceededGet">
            <summary>设置 SimpleCommand.get_CommandSucceeded() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.CommandSucceededSetBoolean">
            <summary>设置 SimpleCommand.set_CommandSucceeded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.ExecuteDelegateGet">
            <summary>设置 SimpleCommand.get_ExecuteDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.ExecuteDelegateSetActionOfObject">
            <summary>设置 SimpleCommand.set_ExecuteDelegate(Action`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.AllInstances.ExecuteObject">
            <summary>设置 SimpleCommand.Execute(Object parameter) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleCommand.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleCommand.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleCommand.Bind(System.Windows.Input.ICommand)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CanExecuteChangedAddEventHandler">
            <summary>设置 SimpleCommand.add_CanExecuteChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CanExecuteChangedRemoveEventHandler">
            <summary>设置 SimpleCommand.remove_CanExecuteChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CanExecuteDelegateGet">
            <summary>设置 SimpleCommand.get_CanExecuteDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CanExecuteDelegateSetPredicateOfObject">
            <summary>设置 SimpleCommand.set_CanExecuteDelegate(Predicate`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CanExecuteObject">
            <summary>设置 SimpleCommand.CanExecute(Object parameter) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CommandSucceededGet">
            <summary>设置 SimpleCommand.get_CommandSucceeded() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.CommandSucceededSetBoolean">
            <summary>设置 SimpleCommand.set_CommandSucceeded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.Constructor">
            <summary>设置 SimpleCommand.SimpleCommand() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.ExecuteDelegateGet">
            <summary>设置 SimpleCommand.get_ExecuteDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.ExecuteDelegateSetActionOfObject">
            <summary>设置 SimpleCommand.set_ExecuteDelegate(Action`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleCommand.ExecuteObject">
            <summary>设置 SimpleCommand.Execute(Object parameter) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSimpleRule">
            <summary>Cinch.SimpleRule 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleRule.#ctor(Cinch.SimpleRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSimpleRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.AllInstances.RuleDelegateGet">
            <summary>设置 SimpleRule.get_RuleDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.AllInstances.RuleDelegateSetFuncOfObjectBoolean">
            <summary>设置 SimpleRule.set_RuleDelegate(Func`2&lt;Object,Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.AllInstances.ValidateRuleObject">
            <summary>设置 SimpleRule.ValidateRule(Object domainObject) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSimpleRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.ConstructorStringStringFuncOfObjectBoolean">
            <summary>设置 SimpleRule.SimpleRule(String propertyName, String brokenDescription, Func`2&lt;Object,Boolean&gt; ruleDelegate) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.RuleDelegateGet">
            <summary>设置 SimpleRule.get_RuleDelegate() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.RuleDelegateSetFuncOfObjectBoolean">
            <summary>设置 SimpleRule.set_RuleDelegate(Func`2&lt;Object,Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSimpleRule.ValidateRuleObject">
            <summary>设置 SimpleRule.ValidateRule(Object domainObject) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimSingleEventCommand">
            <summary>Cinch.SingleEventCommand 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSingleEventCommand.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSingleEventCommand.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimSingleEventCommand.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.GetCommandParameterDependencyObject">
            <summary>设置 SingleEventCommand.GetCommandParameter(DependencyObject obj) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.GetRoutedEventNameDependencyObject">
            <summary>设置 SingleEventCommand.GetRoutedEventName(DependencyObject d) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.GetTheCommandToRunDependencyObject">
            <summary>设置 SingleEventCommand.GetTheCommandToRun(DependencyObject d) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.OnRoutedEventNameChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 SingleEventCommand.OnRoutedEventNameChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.SetCommandParameterDependencyObjectObject">
            <summary>设置 SingleEventCommand.SetCommandParameter(DependencyObject obj, Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.SetRoutedEventNameDependencyObjectString">
            <summary>设置 SingleEventCommand.SetRoutedEventName(DependencyObject d, String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.SetTheCommandToRunDependencyObjectICommand">
            <summary>设置 SingleEventCommand.SetTheCommandToRun(DependencyObject d, ICommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimSingleEventCommand.StaticConstructor">
            <summary>设置 SingleEventCommand.SingleEventCommand() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestMessageBoxService">
            <summary>Cinch.TestMessageBoxService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestMessageBoxService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestMessageBoxService.#ctor(Cinch.TestMessageBoxService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestMessageBoxService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowErrorString">
            <summary>设置 TestMessageBoxService.ShowError(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowInformationString">
            <summary>设置 TestMessageBoxService.ShowInformation(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowOkCancelRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowOkCancelResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowOkCancelRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowOkCancelResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowOkCancelStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowWarningString">
            <summary>设置 TestMessageBoxService.ShowWarning(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoCancelRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowYesNoCancelResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoCancelRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowYesNoCancelResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoCancelStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowYesNoResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowYesNoResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.AllInstances.ShowYesNoStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestMessageBoxService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestMessageBoxService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestMessageBoxService.Bind(Cinch.IMessageBoxService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.Constructor">
            <summary>设置 TestMessageBoxService.TestMessageBoxService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowErrorString">
            <summary>设置 TestMessageBoxService.ShowError(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowInformationString">
            <summary>设置 TestMessageBoxService.ShowInformation(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowOkCancelRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowOkCancelResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowOkCancelRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowOkCancelResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowOkCancelStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowWarningString">
            <summary>设置 TestMessageBoxService.ShowWarning(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoCancelRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowYesNoCancelResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoCancelRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowYesNoCancelResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoCancelStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoRespondersGet">
            <summary>设置 TestMessageBoxService.get_ShowYesNoResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoRespondersSetQueueOfFuncOfCustomDialogResults">
            <summary>设置 TestMessageBoxService.set_ShowYesNoResponders(Queue`1&lt;Func`1&lt;CustomDialogResults&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestMessageBoxService.ShowYesNoStringCustomDialogIcons">
            <summary>设置 TestMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestOpenFileService">
            <summary>Cinch.TestOpenFileService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestOpenFileService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestOpenFileService.#ctor(Cinch.TestOpenFileService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestOpenFileService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.FileNameGet">
            <summary>设置 TestOpenFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.FileNameSetString">
            <summary>设置 TestOpenFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.FilterGet">
            <summary>设置 TestOpenFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.FilterSetString">
            <summary>设置 TestOpenFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.InitialDirectoryGet">
            <summary>设置 TestOpenFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.InitialDirectorySetString">
            <summary>设置 TestOpenFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.ShowDialogRespondersGet">
            <summary>设置 TestOpenFileService.get_ShowDialogResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.ShowDialogRespondersSetQueueOfFuncOfNullableOfBoolean">
            <summary>设置 TestOpenFileService.set_ShowDialogResponders(Queue`1&lt;Func`1&lt;Nullable`1&lt;Boolean&gt;&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.AllInstances.ShowDialogWindow">
            <summary>设置 TestOpenFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestOpenFileService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestOpenFileService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestOpenFileService.Bind(Cinch.IOpenFileService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.Constructor">
            <summary>设置 TestOpenFileService.TestOpenFileService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.FileNameGet">
            <summary>设置 TestOpenFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.FileNameSetString">
            <summary>设置 TestOpenFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.FilterGet">
            <summary>设置 TestOpenFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.FilterSetString">
            <summary>设置 TestOpenFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.InitialDirectoryGet">
            <summary>设置 TestOpenFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.InitialDirectorySetString">
            <summary>设置 TestOpenFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.ShowDialogRespondersGet">
            <summary>设置 TestOpenFileService.get_ShowDialogResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.ShowDialogRespondersSetQueueOfFuncOfNullableOfBoolean">
            <summary>设置 TestOpenFileService.set_ShowDialogResponders(Queue`1&lt;Func`1&lt;Nullable`1&lt;Boolean&gt;&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestOpenFileService.ShowDialogWindow">
            <summary>设置 TestOpenFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestSaveFileService">
            <summary>Cinch.TestSaveFileService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestSaveFileService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestSaveFileService.#ctor(Cinch.TestSaveFileService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestSaveFileService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.FileNameGet">
            <summary>设置 TestSaveFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.FileNameSetString">
            <summary>设置 TestSaveFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.FilterGet">
            <summary>设置 TestSaveFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.FilterSetString">
            <summary>设置 TestSaveFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.InitialDirectoryGet">
            <summary>设置 TestSaveFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.InitialDirectorySetString">
            <summary>设置 TestSaveFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.OverwritePromptGet">
            <summary>设置 TestSaveFileService.get_OverwritePrompt() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.OverwritePromptSetBoolean">
            <summary>设置 TestSaveFileService.set_OverwritePrompt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.ShowDialogRespondersGet">
            <summary>设置 TestSaveFileService.get_ShowDialogResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.ShowDialogRespondersSetQueueOfFuncOfNullableOfBoolean">
            <summary>设置 TestSaveFileService.set_ShowDialogResponders(Queue`1&lt;Func`1&lt;Nullable`1&lt;Boolean&gt;&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.AllInstances.ShowDialogWindow">
            <summary>设置 TestSaveFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestSaveFileService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestSaveFileService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestSaveFileService.Bind(Cinch.ISaveFileService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.Constructor">
            <summary>设置 TestSaveFileService.TestSaveFileService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.FileNameGet">
            <summary>设置 TestSaveFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.FileNameSetString">
            <summary>设置 TestSaveFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.FilterGet">
            <summary>设置 TestSaveFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.FilterSetString">
            <summary>设置 TestSaveFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.InitialDirectoryGet">
            <summary>设置 TestSaveFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.InitialDirectorySetString">
            <summary>设置 TestSaveFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.OverwritePromptGet">
            <summary>设置 TestSaveFileService.get_OverwritePrompt() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.OverwritePromptSetBoolean">
            <summary>设置 TestSaveFileService.set_OverwritePrompt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.ShowDialogRespondersGet">
            <summary>设置 TestSaveFileService.get_ShowDialogResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.ShowDialogRespondersSetQueueOfFuncOfNullableOfBoolean">
            <summary>设置 TestSaveFileService.set_ShowDialogResponders(Queue`1&lt;Func`1&lt;Nullable`1&lt;Boolean&gt;&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestSaveFileService.ShowDialogWindow">
            <summary>设置 TestSaveFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestUIVisualizerService">
            <summary>Cinch.TestUIVisualizerService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestUIVisualizerService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestUIVisualizerService.#ctor(Cinch.TestUIVisualizerService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.RegisterStringType">
            <summary>设置 TestUIVisualizerService.Register(String key, Type winType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowDialogResultRespondersGet">
            <summary>设置 TestUIVisualizerService.get_ShowDialogResultResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowDialogResultRespondersSetQueueOfFuncOfBoolean">
            <summary>设置 TestUIVisualizerService.set_ShowDialogResultResponders(Queue`1&lt;Func`1&lt;Boolean&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowDialogStringObject">
            <summary>设置 TestUIVisualizerService.ShowDialog(String key, Object state) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowResultRespondersGet">
            <summary>设置 TestUIVisualizerService.get_ShowResultResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowResultRespondersSetQueueOfFuncOfBoolean">
            <summary>设置 TestUIVisualizerService.set_ShowResultResponders(Queue`1&lt;Func`1&lt;Boolean&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.ShowStringObjectBooleanEventHandlerOfUICompletedEventArgs">
            <summary>设置 TestUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.AllInstances.UnregisterString">
            <summary>设置 TestUIVisualizerService.Unregister(String key) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestUIVisualizerService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestUIVisualizerService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimTestUIVisualizerService.Bind(Cinch.IUIVisualizerService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.Constructor">
            <summary>设置 TestUIVisualizerService.TestUIVisualizerService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.RegisterStringType">
            <summary>设置 TestUIVisualizerService.Register(String key, Type winType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowDialogResultRespondersGet">
            <summary>设置 TestUIVisualizerService.get_ShowDialogResultResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowDialogResultRespondersSetQueueOfFuncOfBoolean">
            <summary>设置 TestUIVisualizerService.set_ShowDialogResultResponders(Queue`1&lt;Func`1&lt;Boolean&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowDialogStringObject">
            <summary>设置 TestUIVisualizerService.ShowDialog(String key, Object state) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowResultRespondersGet">
            <summary>设置 TestUIVisualizerService.get_ShowResultResponders() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowResultRespondersSetQueueOfFuncOfBoolean">
            <summary>设置 TestUIVisualizerService.set_ShowResultResponders(Queue`1&lt;Func`1&lt;Boolean&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.ShowStringObjectBooleanEventHandlerOfUICompletedEventArgs">
            <summary>设置 TestUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimTestUIVisualizerService.UnregisterString">
            <summary>设置 TestUIVisualizerService.Unregister(String key) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimUICompletedEventArgs">
            <summary>Cinch.UICompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUICompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUICompletedEventArgs.#ctor(Cinch.UICompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimUICompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 UICompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.AllInstances.ResultSetNullableOfBoolean">
            <summary>设置 UICompletedEventArgs.set_Result(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.AllInstances.StateGet">
            <summary>设置 UICompletedEventArgs.get_State() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.AllInstances.StateSetObject">
            <summary>设置 UICompletedEventArgs.set_State(Object value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUICompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUICompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.Constructor">
            <summary>设置 UICompletedEventArgs.UICompletedEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.ResultGet">
            <summary>设置 UICompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.ResultSetNullableOfBoolean">
            <summary>设置 UICompletedEventArgs.set_Result(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.StateGet">
            <summary>设置 UICompletedEventArgs.get_State() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUICompletedEventArgs.StateSetObject">
            <summary>设置 UICompletedEventArgs.set_State(Object value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimUserControlLifetimeEvent">
            <summary>Cinch.UserControlLifetimeEvent 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUserControlLifetimeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUserControlLifetimeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimUserControlLifetimeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.GetCommandParameterDependencyObject">
            <summary>设置 UserControlLifetimeEvent.GetCommandParameter(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.GetLoadedDependencyObject">
            <summary>设置 UserControlLifetimeEvent.GetLoaded(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.GetUnloadedDependencyObject">
            <summary>设置 UserControlLifetimeEvent.GetUnloaded(DependencyObject source) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.OnLoadedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 UserControlLifetimeEvent.OnLoadedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.OnUnloadedEventInfoChangedDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 UserControlLifetimeEvent.OnUnloadedEventInfoChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.OnUserControlLoadedObjectEventArgs">
            <summary>设置 UserControlLifetimeEvent.OnUserControlLoaded(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.OnUserControlUnloadedObjectEventArgs">
            <summary>设置 UserControlLifetimeEvent.OnUserControlUnloaded(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.SetCommandParameterDependencyObjectObject">
            <summary>设置 UserControlLifetimeEvent.SetCommandParameter(DependencyObject source, Object value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.SetLoadedDependencyObjectICommand">
            <summary>设置 UserControlLifetimeEvent.SetLoaded(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.SetUnloadedDependencyObjectICommand">
            <summary>设置 UserControlLifetimeEvent.SetUnloaded(DependencyObject source, ICommand command) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimUserControlLifetimeEvent.StaticConstructor">
            <summary>设置 UserControlLifetimeEvent.UserControlLifetimeEvent() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimValidatingObject">
            <summary>Cinch.ValidatingObject 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.#ctor(Cinch.ValidatingObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AddRuleRule">
            <summary>设置 ValidatingObject.AddRule(Rule newRule) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimValidatingObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.AddRuleRule">
            <summary>设置 ValidatingObject.AddRule(Rule newRule) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.CleanStringString">
            <summary>设置 ValidatingObject.CleanString(String s) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.GetINPCSubscribers">
            <summary>设置 ValidatingObject.GetINPCSubscribers() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.NotifyPropertyChangedPropertyChangedEventArgs">
            <summary>设置 ValidatingObject.NotifyPropertyChanged(PropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.NotifyPropertyChangedString">
            <summary>设置 ValidatingObject.NotifyPropertyChanged(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 ValidatingObject.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 ValidatingObject.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.ThrowOnInvalidPropertyNameGet">
            <summary>设置 ValidatingObject.get_ThrowOnInvalidPropertyName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.ThrowOnInvalidPropertyNameSetBoolean">
            <summary>设置 ValidatingObject.set_ThrowOnInvalidPropertyName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.AllInstances.VerifyPropertyNameString">
            <summary>设置 ValidatingObject.VerifyPropertyName(String propertyName) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.CleanStringString">
            <summary>设置 ValidatingObject.CleanString(String s) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.Constructor">
            <summary>设置 ValidatingObject.ValidatingObject() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.GetINPCSubscribers">
            <summary>设置 ValidatingObject.GetINPCSubscribers() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.NotifyPropertyChangedPropertyChangedEventArgs">
            <summary>设置 ValidatingObject.NotifyPropertyChanged(PropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.NotifyPropertyChangedString">
            <summary>设置 ValidatingObject.NotifyPropertyChanged(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 ValidatingObject.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 ValidatingObject.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.ThrowOnInvalidPropertyNameGet">
            <summary>设置 ValidatingObject.get_ThrowOnInvalidPropertyName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.ThrowOnInvalidPropertyNameSetBoolean">
            <summary>设置 ValidatingObject.set_ThrowOnInvalidPropertyName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingObject.VerifyPropertyNameString">
            <summary>设置 ValidatingObject.VerifyPropertyName(String propertyName) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimValidatingViewModelBase">
            <summary>Cinch.ValidatingViewModelBase 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.#ctor(Cinch.ValidatingViewModelBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AddRuleRule">
            <summary>设置 ValidatingViewModelBase.AddRule(Rule newRule) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.AddRuleRule">
            <summary>设置 ValidatingViewModelBase.AddRule(Rule newRule) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.CleanStringString">
            <summary>设置 ValidatingViewModelBase.CleanString(String s) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.ErrorGet">
            <summary>设置 ValidatingViewModelBase.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.GetBrokenRules">
            <summary>设置 ValidatingViewModelBase.GetBrokenRules() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.GetBrokenRulesString">
            <summary>设置 ValidatingViewModelBase.GetBrokenRules(String property) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.IsValidGet">
            <summary>设置 ValidatingViewModelBase.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.ItemGetString">
            <summary>设置 ValidatingViewModelBase.get_Item(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.AllInstances.NotifyChangedStringArray">
            <summary>设置 ValidatingViewModelBase.NotifyChanged(String[] propertyNames) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.Bind(Cinch.IParentablePropertyExposer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimValidatingViewModelBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.CleanStringString">
            <summary>设置 ValidatingViewModelBase.CleanString(String s) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.Constructor">
            <summary>设置 ValidatingViewModelBase.ValidatingViewModelBase() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.ErrorGet">
            <summary>设置 ValidatingViewModelBase.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.GetBrokenRules">
            <summary>设置 ValidatingViewModelBase.GetBrokenRules() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.GetBrokenRulesString">
            <summary>设置 ValidatingViewModelBase.GetBrokenRules(String property) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.IsValidGet">
            <summary>设置 ValidatingViewModelBase.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.ItemGetString">
            <summary>设置 ValidatingViewModelBase.get_Item(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimValidatingViewModelBase.NotifyChangedStringArray">
            <summary>设置 ValidatingViewModelBase.NotifyChanged(String[] propertyNames) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFMenuItem">
            <summary>Cinch.WPFMenuItem 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMenuItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMenuItem.#ctor(Cinch.WPFMenuItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFMenuItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.ChildrenGet">
            <summary>设置 WPFMenuItem.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.ChildrenSetListOfWPFMenuItem">
            <summary>设置 WPFMenuItem.set_Children(List`1&lt;WPFMenuItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.CommandGet">
            <summary>设置 WPFMenuItem.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.CommandSetSimpleCommand">
            <summary>设置 WPFMenuItem.set_Command(SimpleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.IconUrlGet">
            <summary>设置 WPFMenuItem.get_IconUrl() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.IconUrlSetString">
            <summary>设置 WPFMenuItem.set_IconUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.TextGet">
            <summary>设置 WPFMenuItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.AllInstances.TextSetString">
            <summary>设置 WPFMenuItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMenuItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMenuItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.ChildrenGet">
            <summary>设置 WPFMenuItem.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.ChildrenSetListOfWPFMenuItem">
            <summary>设置 WPFMenuItem.set_Children(List`1&lt;WPFMenuItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.CommandGet">
            <summary>设置 WPFMenuItem.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.CommandSetSimpleCommand">
            <summary>设置 WPFMenuItem.set_Command(SimpleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.ConstructorString">
            <summary>设置 WPFMenuItem.WPFMenuItem(String item) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.IconUrlGet">
            <summary>设置 WPFMenuItem.get_IconUrl() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.IconUrlSetString">
            <summary>设置 WPFMenuItem.set_IconUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.TextGet">
            <summary>设置 WPFMenuItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMenuItem.TextSetString">
            <summary>设置 WPFMenuItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFMessageBoxService">
            <summary>Cinch.WPFMessageBoxService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMessageBoxService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMessageBoxService.#ctor(Cinch.WPFMessageBoxService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.GetButtonCustomDialogButtons">
            <summary>设置 WPFMessageBoxService.GetButton(CustomDialogButtons btn) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.GetImageCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.GetImage(CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.GetResultMessageBoxResult">
            <summary>设置 WPFMessageBoxService.GetResult(MessageBoxResult result) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowErrorString">
            <summary>设置 WPFMessageBoxService.ShowError(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowInformationString">
            <summary>设置 WPFMessageBoxService.ShowInformation(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowMessageStringStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowMessage(String message, String heading, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowOkCancelStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowQuestionWithButtonStringCustomDialogIconsCustomDialogButtons">
            <summary>设置 WPFMessageBoxService.ShowQuestionWithButton(String message, CustomDialogIcons icon, CustomDialogButtons button) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowWarningString">
            <summary>设置 WPFMessageBoxService.ShowWarning(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowYesNoCancelStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.AllInstances.ShowYesNoStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMessageBoxService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMessageBoxService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFMessageBoxService.Bind(Cinch.IMessageBoxService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.Constructor">
            <summary>设置 WPFMessageBoxService.WPFMessageBoxService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.GetButtonCustomDialogButtons">
            <summary>设置 WPFMessageBoxService.GetButton(CustomDialogButtons btn) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.GetImageCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.GetImage(CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.GetResultMessageBoxResult">
            <summary>设置 WPFMessageBoxService.GetResult(MessageBoxResult result) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowErrorString">
            <summary>设置 WPFMessageBoxService.ShowError(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowInformationString">
            <summary>设置 WPFMessageBoxService.ShowInformation(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowMessageStringStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowMessage(String message, String heading, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowOkCancelStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowQuestionWithButtonStringCustomDialogIconsCustomDialogButtons">
            <summary>设置 WPFMessageBoxService.ShowQuestionWithButton(String message, CustomDialogIcons icon, CustomDialogButtons button) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowWarningString">
            <summary>设置 WPFMessageBoxService.ShowWarning(String message) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowYesNoCancelStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFMessageBoxService.ShowYesNoStringCustomDialogIcons">
            <summary>设置 WPFMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFOpenFileService">
            <summary>Cinch.WPFOpenFileService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFOpenFileService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFOpenFileService.#ctor(Cinch.WPFOpenFileService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFOpenFileService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.FileNameGet">
            <summary>设置 WPFOpenFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.FileNameSetString">
            <summary>设置 WPFOpenFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.FilterGet">
            <summary>设置 WPFOpenFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.FilterSetString">
            <summary>设置 WPFOpenFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.InitialDirectoryGet">
            <summary>设置 WPFOpenFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.InitialDirectorySetString">
            <summary>设置 WPFOpenFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.AllInstances.ShowDialogWindow">
            <summary>设置 WPFOpenFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFOpenFileService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFOpenFileService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFOpenFileService.Bind(Cinch.IOpenFileService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.Constructor">
            <summary>设置 WPFOpenFileService.WPFOpenFileService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.FileNameGet">
            <summary>设置 WPFOpenFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.FileNameSetString">
            <summary>设置 WPFOpenFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.FilterGet">
            <summary>设置 WPFOpenFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.FilterSetString">
            <summary>设置 WPFOpenFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.InitialDirectoryGet">
            <summary>设置 WPFOpenFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.InitialDirectorySetString">
            <summary>设置 WPFOpenFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFOpenFileService.ShowDialogWindow">
            <summary>设置 WPFOpenFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFSaveFileService">
            <summary>Cinch.WPFSaveFileService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFSaveFileService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFSaveFileService.#ctor(Cinch.WPFSaveFileService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFSaveFileService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.FileNameGet">
            <summary>设置 WPFSaveFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.FileNameSetString">
            <summary>设置 WPFSaveFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.FilterGet">
            <summary>设置 WPFSaveFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.FilterSetString">
            <summary>设置 WPFSaveFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.InitialDirectoryGet">
            <summary>设置 WPFSaveFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.InitialDirectorySetString">
            <summary>设置 WPFSaveFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.OverwritePromptGet">
            <summary>设置 WPFSaveFileService.get_OverwritePrompt() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.OverwritePromptSetBoolean">
            <summary>设置 WPFSaveFileService.set_OverwritePrompt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.AllInstances.ShowDialogWindow">
            <summary>设置 WPFSaveFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFSaveFileService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFSaveFileService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFSaveFileService.Bind(Cinch.ISaveFileService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.Constructor">
            <summary>设置 WPFSaveFileService.WPFSaveFileService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.FileNameGet">
            <summary>设置 WPFSaveFileService.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.FileNameSetString">
            <summary>设置 WPFSaveFileService.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.FilterGet">
            <summary>设置 WPFSaveFileService.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.FilterSetString">
            <summary>设置 WPFSaveFileService.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.InitialDirectoryGet">
            <summary>设置 WPFSaveFileService.get_InitialDirectory() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.InitialDirectorySetString">
            <summary>设置 WPFSaveFileService.set_InitialDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.OverwritePromptGet">
            <summary>设置 WPFSaveFileService.get_OverwritePrompt() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.OverwritePromptSetBoolean">
            <summary>设置 WPFSaveFileService.set_OverwritePrompt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFSaveFileService.ShowDialogWindow">
            <summary>设置 WPFSaveFileService.ShowDialog(Window owner) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFUIVisualizerService">
            <summary>Cinch.WPFUIVisualizerService 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFUIVisualizerService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFUIVisualizerService.#ctor(Cinch.WPFUIVisualizerService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.CreateWindowStringObjectBooleanEventHandlerOfUICompletedEventArgsBoolean">
            <summary>设置 WPFUIVisualizerService.CreateWindow(String key, Object dataContext, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc, Boolean isModal) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.RegisterDictionaryOfStringType">
            <summary>设置 WPFUIVisualizerService.Register(Dictionary`2&lt;String,Type&gt; startupData) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.RegisterStringType">
            <summary>设置 WPFUIVisualizerService.Register(String key, Type winType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.ShowDialogStringObject">
            <summary>设置 WPFUIVisualizerService.ShowDialog(String key, Object state) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.ShowStringObjectBooleanEventHandlerOfUICompletedEventArgs">
            <summary>设置 WPFUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.AllInstances.UnregisterString">
            <summary>设置 WPFUIVisualizerService.Unregister(String key) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFUIVisualizerService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFUIVisualizerService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWPFUIVisualizerService.Bind(Cinch.IUIVisualizerService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.Constructor">
            <summary>设置 WPFUIVisualizerService.WPFUIVisualizerService() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.CreateWindowStringObjectBooleanEventHandlerOfUICompletedEventArgsBoolean">
            <summary>设置 WPFUIVisualizerService.CreateWindow(String key, Object dataContext, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc, Boolean isModal) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.RegisterDictionaryOfStringType">
            <summary>设置 WPFUIVisualizerService.Register(Dictionary`2&lt;String,Type&gt; startupData) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.RegisterStringType">
            <summary>设置 WPFUIVisualizerService.Register(String key, Type winType) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.ShowDialogStringObject">
            <summary>设置 WPFUIVisualizerService.ShowDialog(String key, Object state) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.ShowStringObjectBooleanEventHandlerOfUICompletedEventArgs">
            <summary>设置 WPFUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWPFUIVisualizerService.UnregisterString">
            <summary>设置 WPFUIVisualizerService.Unregister(String key) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWaitCursor">
            <summary>Cinch.WaitCursor 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWaitCursor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWaitCursor.#ctor(Cinch.WaitCursor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWaitCursor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWaitCursor.AllInstances.Dispose">
            <summary>设置 WaitCursor.Dispose() 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWaitCursor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWaitCursor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWaitCursor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWaitCursor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWaitCursor.Constructor">
            <summary>设置 WaitCursor.WaitCursor() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWaitCursor.Dispose">
            <summary>设置 WaitCursor.Dispose() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEvent`1">
            <summary>Cinch.WeakEvent`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEvent`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEvent`1.#ctor(Cinch.WeakEvent{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AddT0">
            <summary>设置 WeakEvent`1.Add(!0 eh) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEvent`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AllInstances.AddT0">
            <summary>设置 WeakEvent`1.Add(!0 eh) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AllInstances.Clear">
            <summary>设置 WeakEvent`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AllInstances.RaiseObjectEventArgs">
            <summary>设置 WeakEvent`1.Raise(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AllInstances.RemoveDeadEntries">
            <summary>设置 WeakEvent`1.RemoveDeadEntries() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.AllInstances.RemoveT0">
            <summary>设置 WeakEvent`1.Remove(!0 eh) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEvent`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEvent`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.Clear">
            <summary>设置 WeakEvent`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.Constructor">
            <summary>设置 WeakEvent`1.WeakEvent`1() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.RaiseObjectEventArgs">
            <summary>设置 WeakEvent`1.Raise(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.RemoveDeadEntries">
            <summary>设置 WeakEvent`1.RemoveDeadEntries() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.RemoveT0">
            <summary>设置 WeakEvent`1.Remove(!0 eh) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEvent`1.StaticConstructor">
            <summary>设置 WeakEvent`1.WeakEvent`1() 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEventHandler`2">
            <summary>Cinch.WeakEventHandler`2 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventHandler`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventHandler`2.#ctor(Cinch.WeakEventHandler{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEventHandler`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.AllInstances.HandlerGet">
            <summary>设置 WeakEventHandler`2.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.AllInstances.InvokeObjectT1">
            <summary>设置 WeakEventHandler`2.Invoke(Object sender, !1 e) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventHandler`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventHandler`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventHandler`2.Bind(Cinch.IWeakEventHandler{`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.ConstructorEventHandlerOfT1UnregisterCallbackOfT1">
            <summary>设置 WeakEventHandler`2.WeakEventHandler`2(EventHandler`1&lt;!1&gt; eventHandler, UnregisterCallback`1&lt;!1&gt; unregister) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.HandlerGet">
            <summary>设置 WeakEventHandler`2.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.ImplicitOpWeakEventHandlerOfT0T1EventHandlerOfT1">
            <summary>设置 WeakEventHandler`2.op_Implicit(WeakEventHandler`2&lt;!0,!1&gt; weh) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventHandler`2.InvokeObjectT1">
            <summary>设置 WeakEventHandler`2.Invoke(Object sender, !1 e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEventProxy`1">
            <summary>Cinch.WeakEventProxy`1 的填充码类型</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventProxy`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventProxy`1.#ctor(Cinch.WeakEventProxy{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.ShimWeakEventProxy`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.AllInstances.Dispose">
            <summary>设置 WeakEventProxy`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.AllInstances.HandlerObjectT0">
            <summary>设置 WeakEventProxy`1.Handler(Object sender, !0 e) 的 填充码</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventProxy`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventProxy`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Cinch.Fakes.ShimWeakEventProxy`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.ConstructorEventHandlerOfT0">
            <summary>设置 WeakEventProxy`1.WeakEventProxy`1(EventHandler`1&lt;!0&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.Dispose">
            <summary>设置 WeakEventProxy`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Cinch.Fakes.ShimWeakEventProxy`1.HandlerObjectT0">
            <summary>设置 WeakEventProxy`1.Handler(Object sender, !0 e) 的 填充码</summary>
        </member>
        <member name="T:Cinch.Fakes.StubAddRangeObservableCollection`1">
            <summary>Cinch.AddRangeObservableCollection`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubAddRangeObservableCollection`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.ClearItems">
            <summary>设置 ObservableCollection`1.ClearItems() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.ClearItems01">
            <summary>设置 ObservableCollection`1.ClearItems() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.InitializeStub">
            <summary>初始化 type StubAddRangeObservableCollection 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>设置 ObservableCollection`1.InsertItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.InsertItemInt32T0">
            <summary>设置 ObservableCollection`1.InsertItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubAddRangeObservableCollection`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubAddRangeObservableCollection`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>设置 ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.MoveItemInt32Int32">
            <summary>设置 ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>设置 AddRangeObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 AddRangeObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.RemoveItem(System.Int32)">
            <summary>设置 ObservableCollection`1.RemoveItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.RemoveItemInt32">
            <summary>设置 ObservableCollection`1.RemoveItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubAddRangeObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>设置 ObservableCollection`1.SetItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubAddRangeObservableCollection`1.SetItemInt32T0">
            <summary>设置 ObservableCollection`1.SetItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubBackgroundTaskManager`1">
            <summary>Cinch.BackgroundTaskManager`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBackgroundTaskManager`1.#ctor(System.Func{`0},System.Action{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBackgroundTaskManager`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBackgroundTaskManager`1.InitializeStub">
            <summary>初始化 type StubBackgroundTaskManager 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBackgroundTaskManager`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBackgroundTaskManager`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubBindableInput">
            <summary>Cinch.BindableInput 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.AttachBackingFieldToGesture">
            <summary>附加委托以将 StubBindableInput.Gesture 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBindableInput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.CloneCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.CreateInputBinding">
            <summary>设置 BindableInput.CreateInputBinding() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.CreateInputBinding01">
            <summary>设置 BindableInput.CreateInputBinding() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.CreateInstanceCore">
            <summary>设置 BindableInput.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.CreateInstanceCore01">
            <summary>设置 BindableInput.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.FreezeCore(System.Boolean)">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBindableInput.Gesture">
            <summary>设置 BindableInput.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.GestureGet">
            <summary>设置 BindableInput.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.GestureSetInputGesture">
            <summary>设置 BindableInput.set_Gesture(InputGesture value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.InitializeStub">
            <summary>初始化 type StubBindableInput 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBindableInput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubBindableInput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.IsInputBindingMatch(System.Windows.Input.InputBinding)">
            <summary>设置 BindableInput.IsInputBindingMatch(InputBinding binding) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.IsInputBindingMatchInputBinding">
            <summary>设置 BindableInput.IsInputBindingMatch(InputBinding binding) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubBindableInput.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubBindableInput.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubCommandEvent">
            <summary>Cinch.CommandEvent 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.CloneCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.CreateInstanceCore">
            <summary>设置 CommandEvent.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.CreateInstanceCore01">
            <summary>设置 CommandEvent.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.FreezeCore(System.Boolean)">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.InitializeStub">
            <summary>初始化 type StubCommandEvent 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEvent.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEvent.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubCommandEventCollection">
            <summary>Cinch.CommandEventCollection 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEventCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.CloneCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.CloneCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.CloneCoreFreezable">
            <summary>设置 FreezableCollection`1.CloneCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.CloneCurrentValueCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.CloneCurrentValueCoreFreezable">
            <summary>设置 FreezableCollection`1.CloneCurrentValueCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.CreateInstanceCore">
            <summary>设置 FreezableCollection`1.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.CreateInstanceCore01">
            <summary>设置 FreezableCollection`1.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.FreezeCore(System.Boolean)">
            <summary>设置 FreezableCollection`1.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.FreezeCoreBoolean">
            <summary>设置 FreezableCollection`1.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.GetAsFrozenCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.GetAsFrozenCoreFreezable">
            <summary>设置 FreezableCollection`1.GetAsFrozenCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.GetCurrentValueAsFrozenCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 FreezableCollection`1.GetCurrentValueAsFrozenCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.InitializeStub">
            <summary>初始化 type StubCommandEventCollection 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEventCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubCommandEventCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubCommandEventCollection.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubCommandEventCollection.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubDataWrapper`1">
            <summary>Cinch.DataWrapper`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.#ctor(`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.#ctor(Cinch.IParentablePropertyExposer,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.Error">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.GetBrokenRules(System.String)">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.GetBrokenRules01">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.GetFieldValues01">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.InitializeStub">
            <summary>初始化 type StubDataWrapper 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.IsValid">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapper`1.Item(System.String)">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.NotifyChanged(System.String[])">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.OnBeginEdit01">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.OnCancelEdit01">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.OnEndEdit01">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapper`1.RestoreFieldValues(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapper`1.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubDataWrapperBase">
            <summary>Cinch.DataWrapperBase 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.#ctor(Cinch.IParentablePropertyExposer,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.Error">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.GetBrokenRules(System.String)">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.GetBrokenRules01">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.GetFieldValues01">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.InitializeStub">
            <summary>初始化 type StubDataWrapperBase 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.IsValid">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperBase.Item(System.String)">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.NotifyChanged(System.String[])">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.OnBeginEdit01">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.OnCancelEdit01">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.OnEndEdit01">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperBase.RestoreFieldValues(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperBase.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubDataWrapperDirtySupportingBase">
            <summary>Cinch.DataWrapperDirtySupportingBase 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.Error">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetBrokenRules(System.String)">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetBrokenRules01">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.GetFieldValues01">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.InitializeStub">
            <summary>初始化 type StubDataWrapperDirtySupportingBase 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.IsValid">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperDirtySupportingBase.Item(System.String)">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.NotifyChanged(System.String[])">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnBeginEdit01">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnCancelEdit01">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.OnEndEdit01">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperDirtySupportingBase.RestoreFieldValues(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDataWrapperDirtySupportingBase.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubDataWrapperHelper">
            <summary>Cinch.DataWrapperHelper 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDataWrapperHelper.InitializeStub">
            <summary>初始化 type StubDataWrapperHelper 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDataWrapperHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1">
            <summary>Cinch.DispatcherNotifiedObservableCollection`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.ClearItems">
            <summary>设置 ObservableCollection`1.ClearItems() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.ClearItems01">
            <summary>设置 ObservableCollection`1.ClearItems() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.InitializeStub">
            <summary>初始化 type StubDispatcherNotifiedObservableCollection 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>设置 ObservableCollection`1.InsertItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.InsertItemInt32T0">
            <summary>设置 ObservableCollection`1.InsertItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>设置 ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.MoveItemInt32Int32">
            <summary>设置 ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>设置 DispatcherNotifiedObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>设置 DispatcherNotifiedObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.RemoveItem(System.Int32)">
            <summary>设置 ObservableCollection`1.RemoveItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.RemoveItemInt32">
            <summary>设置 ObservableCollection`1.RemoveItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>设置 ObservableCollection`1.SetItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubDispatcherNotifiedObservableCollection`1.SetItemInt32T0">
            <summary>设置 ObservableCollection`1.SetItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubEditableValidatingObject">
            <summary>Cinch.EditableValidatingObject 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.Error">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.GetBrokenRules(System.String)">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.GetBrokenRules01">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.GetFieldValues">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.GetFieldValues01">
            <summary>设置 EditableValidatingObject.GetFieldValues() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.InitializeStub">
            <summary>初始化 type StubEditableValidatingObject 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.IsValid">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubEditableValidatingObject.Item(System.String)">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.NotifyChanged(System.String[])">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.OnBeginEdit">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.OnBeginEdit01">
            <summary>设置 EditableValidatingObject.OnBeginEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.OnCancelEdit">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.OnCancelEdit01">
            <summary>设置 EditableValidatingObject.OnCancelEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.OnEndEdit">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.OnEndEdit01">
            <summary>设置 EditableValidatingObject.OnEndEdit() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubEditableValidatingObject.RestoreFieldValues(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubEditableValidatingObject.RestoreFieldValuesDictionaryOfStringObject">
            <summary>设置 EditableValidatingObject.RestoreFieldValues(Dictionary`2&lt;String,Object&gt; fieldValues) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubFocusHelper">
            <summary>Cinch.FocusHelper 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubFocusHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubFocusHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubFocusHelper.InitializeStub">
            <summary>初始化 type StubFocusHelper 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubFocusHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubFocusHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIChangeIndicator">
            <summary>Cinch.IChangeIndicator 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIChangeIndicator.#ctor">
            <summary>初始化 type StubIChangeIndicator 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIChangeIndicator.Cinch#IChangeIndicator#IsDirty">
            <summary>设置 IChangeIndicator.get_IsDirty() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIChangeIndicator.IsDirtyGet">
            <summary>设置 IChangeIndicator.get_IsDirty() 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIDataWrapper`1">
            <summary>Cinch.IDataWrapper`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIDataWrapper`1.#ctor">
            <summary>初始化 type StubIDataWrapper 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIDataWrapper`1.AttachBackingFieldToDataValue">
            <summary>附加委托以将 StubIDataWrapper.DataValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIDataWrapper`1.Cinch#IDataWrapper{T}#DataValue">
            <summary>设置 IDataWrapper`1.get_DataValue() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIDataWrapper`1.DataValueGet">
            <summary>设置 IDataWrapper`1.get_DataValue() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIDataWrapper`1.DataValueSetT0">
            <summary>设置 IDataWrapper`1.set_DataValue(!0 value) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIMessageBoxService">
            <summary>Cinch.IMessageBoxService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.#ctor">
            <summary>初始化 type StubIMessageBoxService 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowError(System.String)">
            <summary>设置 IMessageBoxService.ShowError(String message) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowInformation(System.String)">
            <summary>设置 IMessageBoxService.ShowInformation(String message) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowOkCancel(System.String,Cinch.CustomDialogIcons)">
            <summary>设置 IMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowWarning(System.String)">
            <summary>设置 IMessageBoxService.ShowWarning(String message) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowYesNo(System.String,Cinch.CustomDialogIcons)">
            <summary>设置 IMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIMessageBoxService.Cinch#IMessageBoxService#ShowYesNoCancel(System.String,Cinch.CustomDialogIcons)">
            <summary>设置 IMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowErrorString">
            <summary>设置 IMessageBoxService.ShowError(String message) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowInformationString">
            <summary>设置 IMessageBoxService.ShowInformation(String message) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowOkCancelStringCustomDialogIcons">
            <summary>设置 IMessageBoxService.ShowOkCancel(String message, CustomDialogIcons icon) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowWarningString">
            <summary>设置 IMessageBoxService.ShowWarning(String message) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowYesNoCancelStringCustomDialogIcons">
            <summary>设置 IMessageBoxService.ShowYesNoCancel(String message, CustomDialogIcons icon) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIMessageBoxService.ShowYesNoStringCustomDialogIcons">
            <summary>设置 IMessageBoxService.ShowYesNo(String message, CustomDialogIcons icon) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIOpenFileService">
            <summary>Cinch.IOpenFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIOpenFileService.#ctor">
            <summary>初始化 type StubIOpenFileService 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIOpenFileService.AttachBackingFieldToFileName">
            <summary>附加委托以将 StubIOpenFileService.FileName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIOpenFileService.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubIOpenFileService.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIOpenFileService.AttachBackingFieldToInitialDirectory">
            <summary>附加委托以将 StubIOpenFileService.InitialDirectory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIOpenFileService.Cinch#IOpenFileService#ShowDialog(System.Windows.Window)">
            <summary>设置 IOpenFileService.ShowDialog(Window owner) 的 存根</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIOpenFileService.Cinch#IOpenFileService#FileName">
            <summary>设置 IOpenFileService.get_FileName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.FileNameGet">
            <summary>设置 IOpenFileService.get_FileName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.FileNameSetString">
            <summary>设置 IOpenFileService.set_FileName(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIOpenFileService.Cinch#IOpenFileService#Filter">
            <summary>设置 IOpenFileService.get_Filter() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.FilterGet">
            <summary>设置 IOpenFileService.get_Filter() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.FilterSetString">
            <summary>设置 IOpenFileService.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIOpenFileService.Cinch#IOpenFileService#InitialDirectory">
            <summary>设置 IOpenFileService.get_InitialDirectory() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.InitialDirectoryGet">
            <summary>设置 IOpenFileService.get_InitialDirectory() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.InitialDirectorySetString">
            <summary>设置 IOpenFileService.set_InitialDirectory(String value) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIOpenFileService.ShowDialogWindow">
            <summary>设置 IOpenFileService.ShowDialog(Window owner) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIParentablePropertyExposer">
            <summary>Cinch.IParentablePropertyExposer 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIParentablePropertyExposer.#ctor">
            <summary>初始化 type StubIParentablePropertyExposer 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIParentablePropertyExposer.Cinch#IParentablePropertyExposer#GetINPCSubscribers">
            <summary>设置 IParentablePropertyExposer.GetINPCSubscribers() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIParentablePropertyExposer.GetINPCSubscribers">
            <summary>设置 IParentablePropertyExposer.GetINPCSubscribers() 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubISaveFileService">
            <summary>Cinch.ISaveFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.#ctor">
            <summary>初始化 type StubISaveFileService 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.AttachBackingFieldToFileName">
            <summary>附加委托以将 StubISaveFileService.FileName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubISaveFileService.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.AttachBackingFieldToInitialDirectory">
            <summary>附加委托以将 StubISaveFileService.InitialDirectory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.AttachBackingFieldToOverwritePrompt">
            <summary>附加委托以将 StubISaveFileService.OverwritePrompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubISaveFileService.Cinch#ISaveFileService#ShowDialog(System.Windows.Window)">
            <summary>设置 ISaveFileService.ShowDialog(Window owner) 的 存根</summary>
        </member>
        <member name="P:Cinch.Fakes.StubISaveFileService.Cinch#ISaveFileService#FileName">
            <summary>设置 ISaveFileService.get_FileName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.FileNameGet">
            <summary>设置 ISaveFileService.get_FileName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.FileNameSetString">
            <summary>设置 ISaveFileService.set_FileName(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubISaveFileService.Cinch#ISaveFileService#Filter">
            <summary>设置 ISaveFileService.get_Filter() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.FilterGet">
            <summary>设置 ISaveFileService.get_Filter() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.FilterSetString">
            <summary>设置 ISaveFileService.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubISaveFileService.Cinch#ISaveFileService#InitialDirectory">
            <summary>设置 ISaveFileService.get_InitialDirectory() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.InitialDirectoryGet">
            <summary>设置 ISaveFileService.get_InitialDirectory() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.InitialDirectorySetString">
            <summary>设置 ISaveFileService.set_InitialDirectory(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubISaveFileService.Cinch#ISaveFileService#OverwritePrompt">
            <summary>设置 ISaveFileService.get_OverwritePrompt() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.OverwritePromptGet">
            <summary>设置 ISaveFileService.get_OverwritePrompt() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.OverwritePromptSetBoolean">
            <summary>设置 ISaveFileService.set_OverwritePrompt(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubISaveFileService.ShowDialogWindow">
            <summary>设置 ISaveFileService.ShowDialog(Window owner) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIUIVisualizerService">
            <summary>Cinch.IUIVisualizerService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIUIVisualizerService.#ctor">
            <summary>初始化 type StubIUIVisualizerService 的新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIUIVisualizerService.Cinch#IUIVisualizerService#Register(System.String,System.Type)">
            <summary>设置 IUIVisualizerService.Register(String key, Type winType) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIUIVisualizerService.Cinch#IUIVisualizerService#Show(System.String,System.Object,System.Boolean,System.EventHandler{Cinch.UICompletedEventArgs})">
            <summary>设置 IUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIUIVisualizerService.Cinch#IUIVisualizerService#ShowDialog(System.String,System.Object)">
            <summary>设置 IUIVisualizerService.ShowDialog(String key, Object state) 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIUIVisualizerService.Cinch#IUIVisualizerService#Unregister(System.String)">
            <summary>设置 IUIVisualizerService.Unregister(String key) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIUIVisualizerService.RegisterStringType">
            <summary>设置 IUIVisualizerService.Register(String key, Type winType) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIUIVisualizerService.ShowDialogStringObject">
            <summary>设置 IUIVisualizerService.ShowDialog(String key, Object state) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIUIVisualizerService.ShowStringObjectBooleanEventHandlerOfUICompletedEventArgs">
            <summary>设置 IUIVisualizerService.Show(String key, Object state, Boolean setOwner, EventHandler`1&lt;UICompletedEventArgs&gt; completedProc) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIUIVisualizerService.UnregisterString">
            <summary>设置 IUIVisualizerService.Unregister(String key) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubIWeakEventHandler`1">
            <summary>Cinch.IWeakEventHandler`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubIWeakEventHandler`1.#ctor">
            <summary>初始化 type StubIWeakEventHandler 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubIWeakEventHandler`1.Cinch#IWeakEventHandler{E}#Handler">
            <summary>设置 IWeakEventHandler`1.get_Handler() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubIWeakEventHandler`1.HandlerGet">
            <summary>设置 IWeakEventHandler`1.get_Handler() 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubInputBindingCollection">
            <summary>Cinch.InputBindingCollection 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubInputBindingCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.CloneCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.CloneCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.CloneCoreFreezable">
            <summary>设置 FreezableCollection`1.CloneCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.CloneCurrentValueCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.CloneCurrentValueCoreFreezable">
            <summary>设置 FreezableCollection`1.CloneCurrentValueCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.CreateInstanceCore">
            <summary>设置 FreezableCollection`1.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.CreateInstanceCore01">
            <summary>设置 FreezableCollection`1.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.FreezeCore(System.Boolean)">
            <summary>设置 FreezableCollection`1.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.FreezeCoreBoolean">
            <summary>设置 FreezableCollection`1.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.GetAsFrozenCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.GetAsFrozenCoreFreezable">
            <summary>设置 FreezableCollection`1.GetAsFrozenCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 FreezableCollection`1.GetCurrentValueAsFrozenCore(Freezable source) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 FreezableCollection`1.GetCurrentValueAsFrozenCore(Freezable source) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.InitializeStub">
            <summary>初始化 type StubInputBindingCollection 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubInputBindingCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubInputBindingCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubInputBindingCollection.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubInputBindingCollection.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubKeyBinding">
            <summary>Cinch.KeyBinding 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.AttachBackingFieldToGesture">
            <summary>附加委托以将 StubKeyBinding.Gesture 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubKeyBinding.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.CloneCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.CreateInputBinding">
            <summary>设置 KeyBinding.CreateInputBinding() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.CreateInputBinding01">
            <summary>设置 KeyBinding.CreateInputBinding() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.CreateInstanceCore">
            <summary>设置 BindableInput.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.CreateInstanceCore01">
            <summary>设置 BindableInput.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.FreezeCore(System.Boolean)">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubKeyBinding.Gesture">
            <summary>设置 KeyBinding.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.GestureGet">
            <summary>设置 KeyBinding.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.GestureSetInputGesture">
            <summary>设置 KeyBinding.set_Gesture(InputGesture value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.InitializeStub">
            <summary>初始化 type StubKeyBinding 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubKeyBinding.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubKeyBinding.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.IsInputBindingMatch(System.Windows.Input.InputBinding)">
            <summary>设置 KeyBinding.IsInputBindingMatch(InputBinding binding) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.IsInputBindingMatchInputBinding">
            <summary>设置 KeyBinding.IsInputBindingMatch(InputBinding binding) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubKeyBinding.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubKeyBinding.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubMediator">
            <summary>Cinch.Mediator 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediator.InitializeStub">
            <summary>初始化 type StubMediator 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubMediatorMessageSinkAttribute">
            <summary>Cinch.MediatorMessageSinkAttribute 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediatorMessageSinkAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMediatorMessageSinkAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMediatorMessageSinkAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.InitializeStub">
            <summary>初始化 type StubMediatorMessageSinkAttribute 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediatorMessageSinkAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediatorMessageSinkAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMediatorMessageSinkAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMediatorMessageSinkAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMediatorMessageSinkAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMediatorMessageSinkAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMediatorMessageSinkAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubMouseBinding">
            <summary>Cinch.MouseBinding 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.AttachBackingFieldToGesture">
            <summary>附加委托以将 StubMouseBinding.Gesture 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMouseBinding.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.CloneCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.CreateInputBinding">
            <summary>设置 MouseBinding.CreateInputBinding() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.CreateInputBinding01">
            <summary>设置 MouseBinding.CreateInputBinding() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.CreateInstanceCore">
            <summary>设置 BindableInput.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.CreateInstanceCore01">
            <summary>设置 BindableInput.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.FreezeCore(System.Boolean)">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMouseBinding.Gesture">
            <summary>设置 MouseBinding.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.GestureGet">
            <summary>设置 MouseBinding.get_Gesture() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.GestureSetInputGesture">
            <summary>设置 MouseBinding.set_Gesture(InputGesture value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.InitializeStub">
            <summary>初始化 type StubMouseBinding 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMouseBinding.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubMouseBinding.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.IsInputBindingMatch(System.Windows.Input.InputBinding)">
            <summary>设置 MouseBinding.IsInputBindingMatch(InputBinding binding) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.IsInputBindingMatchInputBinding">
            <summary>设置 MouseBinding.IsInputBindingMatch(InputBinding binding) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubMouseBinding.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubMouseBinding.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubPropertyObserver`1">
            <summary>Cinch.PropertyObserver`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubPropertyObserver`1.#ctor(`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubPropertyObserver`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubPropertyObserver`1.InitializeStub">
            <summary>初始化 type StubPropertyObserver 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubPropertyObserver`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubPropertyObserver`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubRegexRule">
            <summary>Cinch.RegexRule 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.AttachBackingFieldToDescription">
            <summary>附加委托以将 StubRegexRule.Description 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.AttachBackingFieldToPropertyName">
            <summary>附加委托以将 StubRegexRule.PropertyName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRegexRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRegexRule.Description">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.DescriptionGet">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.DescriptionSetString">
            <summary>设置 Rule.set_Description(String value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.GetHashCode">
            <summary>设置 Rule.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.GetHashCode01">
            <summary>设置 Rule.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.InitializeStub">
            <summary>初始化 type StubRegexRule 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRegexRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRegexRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRegexRule.PropertyName">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.PropertyNameGet">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.PropertyNameSetString">
            <summary>设置 Rule.set_PropertyName(String value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.ToString">
            <summary>设置 Rule.ToString() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.ToString01">
            <summary>设置 Rule.ToString() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRegexRule.ValidateRule(System.Object)">
            <summary>设置 RegexRule.ValidateRule(Object domainObject) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRegexRule.ValidateRuleObject">
            <summary>设置 RegexRule.ValidateRule(Object domainObject) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubRule">
            <summary>Cinch.Rule 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.AttachBackingFieldToDescription">
            <summary>附加委托以将 StubRule.Description 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.AttachBackingFieldToPropertyName">
            <summary>附加委托以将 StubRule.PropertyName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRule.Description">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.DescriptionGet">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.DescriptionSetString">
            <summary>设置 Rule.set_Description(String value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.GetHashCode">
            <summary>设置 Rule.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.GetHashCode01">
            <summary>设置 Rule.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.InitializeStub">
            <summary>初始化 type StubRule 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubRule.PropertyName">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.PropertyNameGet">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.PropertyNameSetString">
            <summary>设置 Rule.set_PropertyName(String value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.ToString">
            <summary>设置 Rule.ToString() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.ToString01">
            <summary>设置 Rule.ToString() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubRule.ValidateRule(System.Object)">
            <summary>设置 Rule.ValidateRule(Object domainObject) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubRule.ValidateRuleObject">
            <summary>设置 Rule.ValidateRule(Object domainObject) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubSCommandArgs">
            <summary>Cinch.SCommandArgs 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSCommandArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSCommandArgs.#ctor(System.Object,System.Object,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSCommandArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSCommandArgs.InitializeStub">
            <summary>初始化 type StubSCommandArgs 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSCommandArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSCommandArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubServiceProvider">
            <summary>Cinch.ServiceProvider 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubServiceProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubServiceProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubServiceProvider.InitializeStub">
            <summary>初始化 type StubServiceProvider 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubServiceProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubServiceProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubSimpleCommand">
            <summary>Cinch.SimpleCommand 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleCommand.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleCommand.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleCommand.InitializeStub">
            <summary>初始化 type StubSimpleCommand 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleCommand.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleCommand.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubSimpleRule">
            <summary>Cinch.SimpleRule 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.#ctor(System.String,System.String,System.Func{System.Object,System.Boolean})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.AttachBackingFieldToDescription">
            <summary>附加委托以将 StubSimpleRule.Description 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.AttachBackingFieldToPropertyName">
            <summary>附加委托以将 StubSimpleRule.PropertyName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.AttachBackingFieldToRuleDelegate">
            <summary>附加委托以将 StubSimpleRule.RuleDelegate 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.Description">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.DescriptionGet">
            <summary>设置 Rule.get_Description() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.DescriptionSetString">
            <summary>设置 Rule.set_Description(String value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.GetHashCode">
            <summary>设置 Rule.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.GetHashCode01">
            <summary>设置 Rule.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.InitializeStub">
            <summary>初始化 type StubSimpleRule 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.PropertyName">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.PropertyNameGet">
            <summary>设置 Rule.get_PropertyName() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.PropertyNameSetString">
            <summary>设置 Rule.set_PropertyName(String value) 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubSimpleRule.RuleDelegate">
            <summary>设置 SimpleRule.get_RuleDelegate() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.RuleDelegateGet">
            <summary>设置 SimpleRule.get_RuleDelegate() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.RuleDelegateSetFuncOfObjectBoolean">
            <summary>设置 SimpleRule.set_RuleDelegate(Func`2&lt;Object,Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.ToString">
            <summary>设置 Rule.ToString() 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.ToString01">
            <summary>设置 Rule.ToString() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubSimpleRule.ValidateRule(System.Object)">
            <summary>设置 SimpleRule.ValidateRule(Object domainObject) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubSimpleRule.ValidateRuleObject">
            <summary>设置 SimpleRule.ValidateRule(Object domainObject) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubTestMessageBoxService">
            <summary>Cinch.TestMessageBoxService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestMessageBoxService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestMessageBoxService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestMessageBoxService.InitializeStub">
            <summary>初始化 type StubTestMessageBoxService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestMessageBoxService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestMessageBoxService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubTestOpenFileService">
            <summary>Cinch.TestOpenFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestOpenFileService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestOpenFileService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestOpenFileService.InitializeStub">
            <summary>初始化 type StubTestOpenFileService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestOpenFileService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestOpenFileService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubTestSaveFileService">
            <summary>Cinch.TestSaveFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestSaveFileService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestSaveFileService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestSaveFileService.InitializeStub">
            <summary>初始化 type StubTestSaveFileService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestSaveFileService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestSaveFileService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubTestUIVisualizerService">
            <summary>Cinch.TestUIVisualizerService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestUIVisualizerService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestUIVisualizerService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubTestUIVisualizerService.InitializeStub">
            <summary>初始化 type StubTestUIVisualizerService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestUIVisualizerService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubTestUIVisualizerService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubUICompletedEventArgs">
            <summary>Cinch.UICompletedEventArgs 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubUICompletedEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubUICompletedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubUICompletedEventArgs.InitializeStub">
            <summary>初始化 type StubUICompletedEventArgs 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubUICompletedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubUICompletedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubValidatingObject">
            <summary>Cinch.ValidatingObject 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubValidatingObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.Error">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.ErrorGet">
            <summary>设置 ValidatingObject.get_Error() 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubValidatingObject.GetBrokenRules">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 存根</summary>
        </member>
        <member name="M:Cinch.Fakes.StubValidatingObject.GetBrokenRules(System.String)">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.GetBrokenRules01">
            <summary>设置 ValidatingObject.GetBrokenRules() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.GetBrokenRulesString">
            <summary>设置 ValidatingObject.GetBrokenRules(String property) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubValidatingObject.InitializeStub">
            <summary>初始化 type StubValidatingObject 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.IsValid">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.IsValidGet">
            <summary>设置 ValidatingObject.get_IsValid() 的 stub</summary>
        </member>
        <member name="P:Cinch.Fakes.StubValidatingObject.Item(System.String)">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.ItemGetString">
            <summary>设置 ValidatingObject.get_Item(String propertyName) 的 stub</summary>
        </member>
        <member name="M:Cinch.Fakes.StubValidatingObject.NotifyChanged(System.String[])">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 存根</summary>
        </member>
        <member name="F:Cinch.Fakes.StubValidatingObject.NotifyChangedStringArray">
            <summary>设置 ValidatingObject.NotifyChanged(String[] propertyNames) 的 stub</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWPFMenuItem">
            <summary>Cinch.WPFMenuItem 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFMenuItem.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMenuItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFMenuItem.InitializeStub">
            <summary>初始化 type StubWPFMenuItem 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMenuItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMenuItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWPFMessageBoxService">
            <summary>Cinch.WPFMessageBoxService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFMessageBoxService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMessageBoxService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFMessageBoxService.InitializeStub">
            <summary>初始化 type StubWPFMessageBoxService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMessageBoxService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFMessageBoxService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWPFOpenFileService">
            <summary>Cinch.WPFOpenFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFOpenFileService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFOpenFileService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFOpenFileService.InitializeStub">
            <summary>初始化 type StubWPFOpenFileService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFOpenFileService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFOpenFileService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWPFSaveFileService">
            <summary>Cinch.WPFSaveFileService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFSaveFileService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFSaveFileService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFSaveFileService.InitializeStub">
            <summary>初始化 type StubWPFSaveFileService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFSaveFileService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFSaveFileService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWPFUIVisualizerService">
            <summary>Cinch.WPFUIVisualizerService 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFUIVisualizerService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFUIVisualizerService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWPFUIVisualizerService.InitializeStub">
            <summary>初始化 type StubWPFUIVisualizerService 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFUIVisualizerService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWPFUIVisualizerService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWaitCursor">
            <summary>Cinch.WaitCursor 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWaitCursor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWaitCursor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWaitCursor.InitializeStub">
            <summary>初始化 type StubWaitCursor 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWaitCursor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWaitCursor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWeakEventHandler`2">
            <summary>Cinch.WeakEventHandler`2 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWeakEventHandler`2.#ctor(System.EventHandler{`1},Cinch.UnregisterCallback{`1})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventHandler`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWeakEventHandler`2.InitializeStub">
            <summary>初始化 type StubWeakEventHandler 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventHandler`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventHandler`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Cinch.Fakes.StubWeakEventProxy`1">
            <summary>Cinch.WeakEventProxy`1 的存根类型</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWeakEventProxy`1.#ctor(System.EventHandler{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventProxy`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Cinch.Fakes.StubWeakEventProxy`1.InitializeStub">
            <summary>初始化 type StubWeakEventProxy 的新实例</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventProxy`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Cinch.Fakes.StubWeakEventProxy`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
